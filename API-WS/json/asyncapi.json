{
  "asyncapi": "2.0.0",
  "defaultContentType": "application/json",
  "info": {
    "title": "Privacy Hero 2 - Adapter <-> Backend Websocket API",
    "version": "0.0.4",
    "description": "# The API for Adapter to Backend communication.\n\n## Overview\n\nAll communication is carried out through a single websocket connection per\nadapter.  The Adapter connects and sends updates to state or requests for\nconfiguration as required, and is also triggered to perform operations or\nupdate its state asynchronously from the backend through the same connection.\n\nBoth directions of the connection use the same basic message format.\n\n## Operations\n\nThe API is broken down by operation, and message type/source.\n\n### Documentation Conventions:\n\n* **SUB** [Subscribe] messages are messages which are sent to the Backend from the\nAdapter.\n* **PUB** [Publish] messages are messages which are sent to the Adapter from the\nBackend.\n\nThe API does not have any inherent Publish/Subscribe semantics.  This is a\ndocumentation convention only.\n\nAll messages to/from the adapter have a common format, which are documented in the\n*Basic Message Forms*. set of operations."
  },
  "servers": {
    "development": {
      "url": "ws2-dev.privacyhero.com",
      "description": "Development server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    },
    "qa": {
      "url": "ws2-qa.privacyhero.com",
      "description": "QA Test server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    },
    "production": {
      "url": "wss://ws2.privacyhero.com",
      "description": "Production server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "user-password": {
        "type": "userPassword",
        "description": "The user password follows the form <Adapter MAC>:<Adapter Secret Hash>\n\n- **Adapter MAC** is the hardware Mac address of the Adapter and it must\n    be the same as the mac used to register the adapter in production.\n    The MAC has the format *00:11:22:33:44:55* or *001122334455* or\n    *00-11-22-33-44-55* all of which are equivalent\n- **Adapter Secret Hash** is a Base64-URL encoded SHA256 hash of the\nunique id contained within the cpu or chips of the adapter.\n\nAn example user:password is (the binary secret is the string ***password*** ):\n\n*00:11:22:33:44:55:XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg*\n\nThe user/password is passed in the **Authorization** header of the http\nconnection which established the websocket."
      }
    }
  },
  "channels": {
    "COMMON": {
      "description": "The common channel is not an actual channel.  It defines the basic message\nstructure upon which all other messages are based.",
      "subscribe": {
        "summary": "Basic Message Forms",
        "description": "All messages are sent by each end of the websocket as required.  These message\nformats are equally valid for transmission from the adapter [SUB] as well as\ntransmission by the back end [PUB].\n\nThere is no strict Subscribe/Publish semantic it is documentation convention\nONLY. The websocket acts as two unidirectional message pipes and Sub/Pub\nmessages are formatted, sent, received and treated identically and without\ndistinction.",
        "message": {
          "oneOf": [
            {
              "name": "BaseMsg",
              "title": "Base Message",
              "summary": "Standard Message Base Format",
              "description": "All Privacy Hero 2 system messages have the following standard form.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                  }
                },
                "example": {
                  "message": "example",
                  "tstamp": 1592217870123
                },
                "required": [
                  "message"
                ]
              }
            },
            {
              "name": "MultiMsg",
              "title": "Multi Message",
              "summary": "Multiple Message Packet",
              "description": "All Privacy Hero 2 system messages may be bundled into a single multi-message.\nThe multi message is a standard message, which hold an array of individual\nmessages.  The individual messages when received will be treated as if they\nwere received sequentially and independently in the order they are listed.\n\nThe purpose of a Multi-Message is to cluster message processing for efficiency.\n\n## Notes regarding adapter bundling implementation.\n\nThe Backend is charged in 100ms units of execution.  It also takes time for the\nbackend to startup and begin processing.  Therefore, it is preferable, unless\nthe message is urgent, that all messages are bundled in the adapter in a minimum\nof 200ms blocks.  If an urgent message must be sent, it should be added to\nthe current bundle and the entire bundle be sent immediately.\n\nThe maximum single multi-message size must not exceed 32KB.  If adding a message\nto the bundle would cause the message size to exceed 32KB, the bundle should be\nsent and the message which would have exceeded the size is added to the next\nbundle.  IF a message is defined which does exceed 32KB, it should not be\nbundled, but MUST be sent as a discreet message.  In this case, the maximum\nmessage size must never exceed 128KB.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Multiple Message Packet.",
                    "const": "multi",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the message was generated, unrelated to the bundled messages\ntimestamps."
                  },
                  "msgs": {
                    "type": "array",
                    "description": "An array of complete and individual messages as defined elsewhere in\nthis specification.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                        },
                        "tstamp": {
                          "type": "int",
                          "format": "int64",
                          "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                        }
                      },
                      "example": {
                        "message": "example",
                        "tstamp": 1592217870123
                      },
                      "required": [
                        "message"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 32
                  }
                },
                "example": {
                  "message": "multi",
                  "tstamp": 1592217870123,
                  "msgs": []
                },
                "required": [
                  "message",
                  "tstamp",
                  "msgs"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Message Formats",
            "description": "Generic Message Formats."
          }
        ]
      },
      "publish": {
        "summary": "Basic Message Forms",
        "description": "All messages are sent by each end of the websocket as required.  These message\nformats are equally valid for transmission from the adapter [SUB] as well as\ntransmission by the back end [PUB].\n\nThere is no strict Subscribe/Publish semantic it is documentation convention\nONLY. The websocket acts as two unidirectional message pipes and Sub/Pub\nmessages are formatted, sent, received and treated identically and without\ndistinction.",
        "message": {
          "oneOf": [
            {
              "name": "BaseMsg",
              "title": "Base Message",
              "summary": "Standard Message Base Format",
              "description": "All Privacy Hero 2 system messages have the following standard form.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                  }
                },
                "example": {
                  "message": "example",
                  "tstamp": 1592217870123
                },
                "required": [
                  "message"
                ]
              }
            },
            {
              "name": "MultiMsg",
              "title": "Multi Message",
              "summary": "Multiple Message Packet",
              "description": "All Privacy Hero 2 system messages may be bundled into a single multi-message.\nThe multi message is a standard message, which hold an array of individual\nmessages.  The individual messages when received will be treated as if they\nwere received sequentially and independently in the order they are listed.\n\nThe purpose of a Multi-Message is to cluster message processing for efficiency.\n\n## Notes regarding adapter bundling implementation.\n\nThe Backend is charged in 100ms units of execution.  It also takes time for the\nbackend to startup and begin processing.  Therefore, it is preferable, unless\nthe message is urgent, that all messages are bundled in the adapter in a minimum\nof 200ms blocks.  If an urgent message must be sent, it should be added to\nthe current bundle and the entire bundle be sent immediately.\n\nThe maximum single multi-message size must not exceed 32KB.  If adding a message\nto the bundle would cause the message size to exceed 32KB, the bundle should be\nsent and the message which would have exceeded the size is added to the next\nbundle.  IF a message is defined which does exceed 32KB, it should not be\nbundled, but MUST be sent as a discreet message.  In this case, the maximum\nmessage size must never exceed 128KB.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Multiple Message Packet.",
                    "const": "multi",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the message was generated, unrelated to the bundled messages\ntimestamps."
                  },
                  "msgs": {
                    "type": "array",
                    "description": "An array of complete and individual messages as defined elsewhere in\nthis specification.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                        },
                        "tstamp": {
                          "type": "int",
                          "format": "int64",
                          "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                        }
                      },
                      "example": {
                        "message": "example",
                        "tstamp": 1592217870123
                      },
                      "required": [
                        "message"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 32
                  }
                },
                "example": {
                  "message": "multi",
                  "tstamp": 1592217870123,
                  "msgs": []
                },
                "required": [
                  "message",
                  "tstamp",
                  "msgs"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Message Formats",
            "description": "Generic Message Formats."
          }
        ]
      }
    },
    "AWS_ERRORS": {
      "description": "These are AWS Generated error messages from the backend to the adapter.\n\nThey are generated by the AWS infrastructure, and not the backend code.\n\nIF the adapter receives one, it should assume the link is fatally compromised\nand internally record the error.  It should then drop the websocket connection\nand attempt to reconnect to the backed.  After a successful reconnection, the\nerror should be logged to the AWS backend.",
      "publish": {
        "summary": "AWS Error Messages",
        "description": "AWS Error Message from the Backend to the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "AWSInternalServerError",
              "title": "AWS Internal Server Error",
              "summary": "AWS Internal Server Error",
              "description": "This message is generated directly by AWS, and does not contain a tstamp.\n\nThis messages indicates something fatal has ocurred in the server.  Upon\nreceipt, the adapter should record the fact it ocurred, and try and reconnect\nto the backend, if a successful reconnection occurs, the adapter should log\nthe internal server error to the backend, and then continue.",
              "tags": [
                {
                  "name": "AWS Errors",
                  "description": "Errors Generated by AWS and sent to the adapter."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "An internal server error, AWS Generated",
                    "const": "Internal server error",
                    "minLength": 21,
                    "maxLength": 21
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "The AWS Websocket Connection ID."
                  },
                  "requestId": {
                    "type": "string",
                    "description": "The ID of the request which caused the error."
                  }
                },
                "example": {
                  "message": "Internal server error",
                  "connectionId": "d2Vic29ja2V0IElE",
                  "requestId": "cmVxdWVzdCBJRA"
                },
                "required": [
                  "message",
                  "connectionId",
                  "requestId"
                ],
                "additionalProperties": false
              }
            },
            {
              "name": "AWSServerError",
              "title": "AWS Server Error",
              "summary": "AWS Server Error",
              "description": "This message is generated directly by AWS, and does not contain a tstamp.\n\nThis messages indicates something fatal has ocurred in the server.  Upon\nreceipt, the adapter should record the fact it ocurred, and try and reconnect\nto the backend, if a successful reconnection occurs, the adapter should log\nthe internal server error to the backend, and then continue.",
              "tags": [
                {
                  "name": "AWS Errors",
                  "description": "Errors Generated by AWS and sent to the adapter."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "A general server error, AWS Generated",
                    "const": "Error",
                    "minLength": 5,
                    "maxLength": 5
                  },
                  "error": {
                    "type": "string",
                    "description": "The description of the Error."
                  }
                },
                "example": {
                  "message": "Error",
                  "error": "An error ocurred."
                },
                "required": [
                  "message",
                  "error"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "AWS Errors",
            "description": "Errors Generated by AWS and sent to the adapter."
          }
        ]
      }
    },
    "ADAPTER_DIAGNOSTICS": {
      "description": "These are messages related to the diagnostic processes of the adapter.\n\nDiagnostics are performed as required by the adapter, and also as a result of\nexplicit command from the backend.\n\nIf the adapter requested a diagnostic check, the tstamp in the reply MUST match\nthe tstamp in the request.",
      "subscribe": {
        "summary": "Adapter Diagnostics",
        "description": "Diagnostic reports from the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "LogMsg",
              "title": "Log Message",
              "summary": "Log Message to Backend",
              "description": "This message causes the backend to log error and general diagnostic messages\nfrom the adapter to the system logs.  It can be sent anytime the adapter\nwishes to log a message.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Log Message to Backend",
                    "const": "log",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the log message was generated inside the adapter. (According to the\nadapters internal clock.)"
                  },
                  "level": {
                    "type": "string",
                    "description": "The level of the log messages.",
                    "enum": [
                      "ERROR",
                      "WARNING",
                      "DEBUG"
                    ]
                  },
                  "log": {
                    "type": "string",
                    "description": "The message to be logged by the Adapter.",
                    "minLength": 1
                  }
                },
                "example": {
                  "message": "log",
                  "tstamp": 1592217870123,
                  "level": "ERROR",
                  "log": "An Error ocurred inside the Adapter"
                },
                "required": [
                  "message",
                  "tstamp",
                  "level",
                  "log"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      }
    },
    "SPEEDTEST": {
      "description": "These are messages related to the diagnostic processes of the adapter.\n\nDiagnostics are performed as required by the adapter, and also as a result of\nexplicit command from the backend.\n\nIf the adapter requested a diagnostic check, the tstamp in the reply MUST match\nthe tstamp in the request.",
      "subscribe": {
        "summary": "Speed Test",
        "description": "Speedtest Reports from the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "SpeedTest",
              "title": "Speed Test",
              "summary": "Report of Speed Test Results",
              "description": "This message causes the latest speedtest result to be logged for the\nAdapter in the backend.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Report of Speed Test Results",
                    "const": "speedtest",
                    "minLength": 9,
                    "maxLength": 9
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "IF the speedtest was performed as a result of a automatic or scheduled test\nthe timestamp is the time the speed test started on the adapter.\n\nIF the speedtest was conducted as a result of a command from the backend,\nthe tstamp is the tstamp from the backend request to commence the speedtest."
                  },
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL of the website the speedtest was conducted against."
                  },
                  "location": {
                    "type": "string",
                    "description": "The String description of the speedtest server location"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The name of the ISP/Network operator managing the speedtest server."
                  },
                  "distance": {
                    "type": "int",
                    "format": "int64",
                    "description": "The distance is the approximate distance from the adapter to the speedtest\nserver.  The distance can be either a value that is estimated to be LESS THAN\nthe distance stated, or CLOSE TO the distance stated.\n\n* -VE = The estimate is a LESS THAN this estimate.\n* +VE = The estimate is a CLOSE TO this estimate.\n\nThe distance is measured in whole MILES."
                  },
                  "rx": {
                    "type": "int",
                    "format": "Result in bits per second of the receive speed test.",
                    "description": "A INT"
                  },
                  "tx": {
                    "type": "int",
                    "format": "Result in bits per second of the transmit speed test.",
                    "description": "A INT"
                  },
                  "connection": {
                    "type": "string",
                    "description": "The connection which was tested.\n\n* **WAN** is the native WAN Interface of the Adapter.\n* **VPN** is the through the VPN tunnel.",
                    "enum": [
                      "WAN",
                      "VPN"
                    ]
                  },
                  "ipv4": {
                    "type": "string",
                    "format": "IPv4 Address",
                    "description": "The Connections Internet IPv4 Address",
                    "minLength": 7,
                    "maxLength": 15
                  },
                  "ipv6": {
                    "type": "string",
                    "format": "IPv6 Address",
                    "description": "The Connections Internet IPv6 Address",
                    "minLength": 2,
                    "maxLength": 39
                  }
                },
                "example": {
                  "message": "speedtest",
                  "tstamp": 1592217870123,
                  "url": "http://www.3bb.com/speedtest",
                  "location": "Phuket, Thailand",
                  "provider": "3BB",
                  "distance": -50,
                  "rx": 185608437,
                  "tx": 282140344,
                  "connection": "WAN",
                  "ipv4": "183.89.198.67"
                },
                "required": [
                  "message",
                  "tstamp",
                  "url",
                  "location",
                  "provider",
                  "distance",
                  "rx",
                  "tx",
                  "connection",
                  "ipv4"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      },
      "publish": {
        "summary": "Speed Test",
        "description": "Commands to instigate speedtest checks.",
        "message": {
          "oneOf": [
            {
              "name": "RunSpeedTest",
              "title": "Run Speed Test",
              "summary": "Run a Speed Test and Report the Results",
              "description": "This message causes the adapter that receives it to perfrom ping and speedtests\nand return the results in a \"speedtest\" message.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Run a Speed Test and Report the Results",
                    "const": "run-speedtest",
                    "minLength": 13,
                    "maxLength": 13
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The request timestamp of the speedtest, this tstamp must be returned\nin the reply with the results as the message tstamp."
                  },
                  "connection": {
                    "type": "string",
                    "description": "OPTIONAL: The connection to test.  If not present, the test is to be preformed\nagainst the native WAN interface.\n\n* **WAN** is the native WAN Interface of the Adapter.\n* **VPN** is the through the VPN tunnel.",
                    "enum": [
                      "WAN",
                      "VPN"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "OPTIONAL: URL to perform the speedtest against.  IF not supplied use\nthe best url probed from speedtest server lists."
                  }
                },
                "example": {
                  "message": "run-speedtest",
                  "tstamp": 1592217870123,
                  "connection": "VPN",
                  "url": "http://www.3bb.com/speedtest"
                },
                "required": [
                  "message",
                  "tstamp"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      }
    },
    "CONNECTION": {
      "description": "These are messages related to the websocket connection and its management.\n\n## NOTES\n\n1. AWS will terminate a websocket after remaining idle for 10 minutes.\n2. AWS May terminate a websocket connection that has been continuously\nmade for 2 Hours.\n\nThere is nothing preventing the link being immediately re-established.\n\n### TODO:\n\nIt is not clear if websocket pings are sufficient to avoid the 10 minute\nidle timeout.  This needs to be tested.\n\nIf it is not sufficient, we will need to do periodic heartbeats at around 9\nminute intervals to prevent the idle timeout.\n\nIt seems there is nothing we can do about the 2 hour timeout except reconnect.\nThis timeout needs to be tested.",
      "subscribe": {
        "summary": "Adapter Link Management",
        "description": "Link Management Messages from the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "LinkEstablished",
              "title": "Link Established",
              "summary": "Advise the Backend that the Adapter has connected to a new websocket",
              "description": "This message is sent from the Adapter to the Backend as the very first\nmessage it sends AFTER establishing any websocket connection to the\nbackend.  It allows the backend to perform link connection housekeeping\nfor the adapter, which is necessary for proper operation.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Advise the Backend that the Adapter has connected to a new websocket",
                    "const": "link established",
                    "minLength": 16,
                    "maxLength": 16
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the link established message was queued by the Adapter.\n(According to the adapters internal clock.)"
                  },
                  "version": {
                    "type": "string",
                    "format": "bas64-url-sha256",
                    "description": "sha256 hash of the firmware image currently loaded in the Adapter. Encoded\nwith base64-url encoding.",
                    "minLength": 43,
                    "maxLength": 43
                  },
                  "variant": {
                    "type": "string",
                    "description": "Optional: Identifier to specify what type of operation the adapter is\nperforming.  This is used to allow the system to deploy different software\nversions to the same hardware.  Normally the backend will not change the\nvariant but will advise about the latest version of software for that variant.",
                    "minLength": 1
                  },
                  "disconnected": {
                    "type": "int",
                    "format": "int64",
                    "description": "Optional: If this message is being sent because the link was disconnected, the\n**disconnected** field is sent, containing the time in milliseconds when the\nadapter detected the link had failed.  If this is the first connection\nsince power on, this field is omitted."
                  }
                },
                "example": {
                  "message": "link established",
                  "tstamp": 1592217870123,
                  "version": "R8rCrK4M_Ff7VttHWuUd9253JrYgwvqO6U15enlcug8",
                  "variant": "PHero2-Router",
                  "disconnected": 1592316782123
                },
                "required": [
                  "message",
                  "tstamp",
                  "version"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Messages",
            "description": "Messages relating to the Adapter and its global state/configuration."
          }
        ]
      },
      "publish": {
        "summary": "Adapter Link Management",
        "description": "Initial Configuration.",
        "message": {
          "oneOf": [
            {
              "name": "InitialConfig",
              "title": "Initial Configuration",
              "summary": "Initial Highest Level Configuration",
              "description": "This message contains the highest level configuration and is sent by the\nbackend after a link is established, and the backend receives the\n*Link Established* message from the Adapter.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Initial Highest Level Configuration",
                    "const": "initial cfg",
                    "minLength": 11,
                    "maxLength": 11
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The tstamp in this message is the same tstamp sent in the *Link Established*\nmessage from the adapter which triggered it to be sent."
                  },
                  "version": {
                    "type": "string",
                    "format": "bas64-url-sha256",
                    "description": "The version of the latest firmaware suitable for the adapter.  This\nversion should match the version installed in the adapter before it continues.\nIf it does noe, the adapter should retrieve the new version from the url in\nthis message, program that and restart the connection.",
                    "minLength": 43,
                    "maxLength": 43
                  },
                  "firmware": {
                    "type": "string",
                    "format": "url",
                    "description": "The firmware url.  This is the location where the latest firmware may be\ndownloaded.  If the adapter detects that a firmware update is required it\ndownloads the firmware from this URL.  If the firmware can not be downloaded\nor the image downloaded does not match the **version** hash, then the firmware\nin the adapter must not be changed, and an error should be logged to the\nbackend."
                  },
                  "loglevel": {
                    "type": "string",
                    "description": "The Minimum level of messages which should be logged to the backend.",
                    "enum": [
                      "NONE",
                      "ERROR",
                      "WARNING",
                      "DEBUG"
                    ]
                  }
                },
                "example": {
                  "message": "initial cfg",
                  "tstamp": 1592217870123,
                  "version": "uDHqOfzVFgcldv41fTTAOVtJSLVxn8M36ufxrEnWtzg",
                  "firmware": "https://dl.privacyhero.com/firmware/adapter_v107.fw",
                  "loglevel": "DEBUG"
                },
                "required": [
                  "message",
                  "tstamp",
                  "version",
                  "firmware",
                  "loglevel"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Messages",
            "description": "Messages relating to the Adapter and its global state/configuration."
          }
        ]
      }
    },
    "DEVICE_DISCOVERY": {
      "description": "These are messages related to the discovery of new devices or changed\ndevices.",
      "subscribe": {
        "summary": "Device Discovery",
        "description": "Device Discovery messages.",
        "message": {
          "oneOf": [
            {
              "name": "DeviceInformation",
              "title": "Device Information",
              "summary": "Advise the Backend that the Device has been discovered or has changed.",
              "description": "This message is sent from the Adapter to the Backend whenever a new device\nis discovered, or if any of the data fields (excluding the online status)\nwithin this message about the device changes.  There is not difference between\na new device or updating a pre-existing device.  Devices are identified by their\nMAC address and MAC is assumed to be unique on a single adapter.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Advise the Backend that the Device has been discovered or has changed.",
                    "const": "device info",
                    "minLength": 11,
                    "maxLength": 11
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the device was discovered/changed."
                  },
                  "mac": {
                    "type": "string",
                    "format": "Mac EUI",
                    "description": "The Devices MAC address.  Assumed unique per adapter.  Eg. \"00:11:22:33:44:55\"\nAlso accepts \"001122334455\" or \"00-11-22-33-44-55\"",
                    "minLength": 1,
                    "maxLength": 17
                  },
                  "ipv4": {
                    "type": "string",
                    "format": "IPv4 Address",
                    "description": "The IPv4 Address assigned to this Device. Alternatively, if the device is using\na fixed IP and not one assigned by DHCP, the IP address it was discovered to be\nusing.",
                    "minLength": 7,
                    "maxLength": 15
                  },
                  "ipv6": {
                    "type": "string",
                    "format": "IPv6 Address",
                    "description": "**Optional:** The IPv6 Address assigned to this Device. Alternatively, if the\ndevice is using a fixed IPv6 and not one assigned by DHCP, the IP address it was\ndiscovered to be using.",
                    "minLength": 2,
                    "maxLength": 39
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Current known Online state for the device.  This is the ONLY field whose change\nof value would not cause a new **\"device info\"** message to be sent.  If a\ndevice falls offline or comes back online, the **\"device state\"** message should\nbe sent."
                  },
                  "dhcp": {
                    "type": "object",
                    "required": [
                      "hostname"
                    ],
                    "description": "DHCP Data discovered about the device.",
                    "properties": {
                      "hostname": {
                        "type": "string",
                        "description": "The Hostname the Device declared itself as.  IF the device did not declare\nitself with a hostname, the adapter should synthesize a hostname for it.\nThis hostname supplied to the backend should be the hostname only part\nand not include the network suffix. ie, if the device declared itself as\n\"MyPS5\" and the local lan suffix is \"lan\" the hostname sent should be\n\"MyPS5\".  This is Option 12 from the DHCP Request.",
                        "minLength": 1,
                        "maxLength": 255
                      },
                      "class": {
                        "type": "string",
                        "description": "**Optional.** The class of device discovered from DHCP.  Can be omitted from\nthe message if no class was provided by the device.  This is option 60\nfrom the DHCP Request."
                      },
                      "clientid": {
                        "type": "string",
                        "description": "**Optional.** The client id of device discovered from DHCP.  Can be omitted from\nthe message if no client id was provided by the device. This is option\n61 from the DHCP Request."
                      },
                      "parameters": {
                        "type": "string",
                        "description": "**Optional.** The Parameter list the client requested be returned to\nit's dhcp request.  This is option 55 from the DHCP Request."
                      }
                    }
                  },
                  "upnp": {
                    "type": "array",
                    "description": "**Optional.** IF a upnp xml device metadata can be retrieved from a device then\nit is to be sent in this sub field, otherwise it is omitted.  It is\npossible for a single physical device to report as multiple internal\nupnp devices.  Each discovered internal upnp device is reported in this array.",
                    "items": {
                      "type": "object",
                      "required": [
                        "deviceType"
                      ],
                      "description": "UPNP Device Description",
                      "properties": {
                        "deviceType": {
                          "type": "string",
                          "description": "The Device type reported by the UPNP Data of this internal device.\n*eg: urn:schemas-upnp-org:device:InternetGatewayDevice:1*"
                        },
                        "manufacturer": {
                          "type": "string",
                          "description": "The Device manufacturer reported by the UPNP Data of this internal device.\n*eg: Samsung*"
                        },
                        "modelName": {
                          "type": "string",
                          "description": "The Model Name reported by the UPNP Data of this internal device.\n*eg: QN82Q80RAFXZA*"
                        },
                        "friendlyName": {
                          "type": "string",
                          "description": "The Friendly Name reported by the UPNP Data of this internal device.\n*eg: 80\" 4k QLED Flatscreen TV*"
                        },
                        "serviceTypeList": {
                          "type": "array",
                          "description": "The List of service types reported by the UPNP Data of this internal\ndevice.\n*eg: [\"urn:schemas-upnp-org:service:Layer3Forwarding:1\"]*",
                          "items": {
                            "type": "string",
                            "description": "Individual Service Type Entry"
                          },
                          "minItems": 1
                        }
                      }
                    },
                    "minItems": 1
                  },
                  "snmp": {
                    "type": "object",
                    "required": [
                      "sysoid"
                    ],
                    "description": "**Optional.** If SNMP metadata can be obtained/probed for a device,\nit is sent in this field, otherwise it is omitted.",
                    "properties": {
                      "sysoid": {
                        "type": "string",
                        "description": "The System OID of the Device."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name the device reports via snmp."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description the device reports via snmp."
                      },
                      "contact": {
                        "type": "string",
                        "description": "The contact the device reports via snmp."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location the device reports via snmp."
                      }
                    }
                  },
                  "bonjour": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "description": "**Optional.** If BONJOUR metadata can be obtained/probed for a device,\nit is sent in this field, otherwise it is omitted.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of a device discovered via Bonjour."
                      },
                      "services": {
                        "type": "array",
                        "description": "The list of services exposed via Bonjour.",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "description": "The list of services exposed via Bonjour.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of a service discovered on the device via Bonjour."
                            },
                            "txt": {
                              "type": "array",
                              "description": "The TXT record from Answers or Additional records.",
                              "items": {
                                "type": "string",
                                "description": "The TXT record from Answers or Additional records."
                              },
                              "minItems": 1
                            }
                          }
                        },
                        "minItems": 1
                      }
                    }
                  },
                  "smb": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "description": "**Optional.** If SMB/Netbios metadata can be obtained/probed for a device,\nit is sent in this field, otherwise it is omitted.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "If the SMB/Netbios reported Name of the device can be determined, it is\nsent in this field."
                      },
                      "domain": {
                        "type": "string",
                        "description": "If the SMB/Netbios reported Domain of the device can be determined, it is\nsent in this field."
                      }
                    }
                  },
                  "hua": {
                    "type": "array",
                    "description": "**Optional.** HTTP User Agents discovered for the device, otherwise\nit is omitted.",
                    "items": {
                      "type": "object",
                      "required": [
                        "userAgent"
                      ],
                      "description": "HTTP User Agent List",
                      "properties": {
                        "userAgent": {
                          "type": "string",
                          "description": "This is the host user agent sniffed from http traffic from the device.\nThis data can not be obtained from https, only http connections.  As\nthere may be more than one userAgent string detected, this is a list of\nthe detected useragents."
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "example": {
                  "message": "device info",
                  "tstamp": 1592217870123,
                  "mac": "00:11:22:33:44:55",
                  "ipv4": "192.168.0.96",
                  "ipv6": "::ffff:c0a8:60",
                  "dhcp": {
                    "hostname": "MyPS5"
                  },
                  "online": true
                },
                "required": [
                  "message",
                  "tstamp",
                  "mac",
                  "ipv4",
                  "dhcp-hostname",
                  "online"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Device Messages",
            "description": "Messages relating to the devices connected to an Adapter and their state/configuration."
          }
        ]
      },
      "publish": {
        "summary": "Device Discovery",
        "description": "Device Discovery messages.",
        "message": {
          "oneOf": [
            {
              "name": "KnownDevices",
              "title": "Known Device Information",
              "summary": "Configures the Adapter with all devices known by the backend.",
              "description": "This message is sent by the Backend after initial adapter configuration\nupon successful connection of an adapter to the backend.  It tells the adapter\nall devices known by the backend.  If a device is not in this list of devices\nthat the adapter knows about, and the device is currently offline, the device\nis deleted. If the device is Online, a new Device Info for the device is queued\nto the backend to update the backends knowledge of all the connected devices.\nIF any of the known device data differs to the data the adapter knows about\nthe device, a new device info message is queued to update the backends knowledge\nof the device.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Configures the Adapter with all devices known by the backend.",
                    "const": "known devices",
                    "minLength": 13,
                    "maxLength": 13
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the device was discovered/changed."
                  },
                  "devices": {
                    "type": "array",
                    "description": "An array of all devices known by the backend for the adapter.",
                    "items": {
                      "type": "object",
                      "required": [
                        "mac",
                        "ipv4",
                        "dhcp-hostname",
                        "online"
                      ],
                      "description": "Device Info",
                      "properties": {
                        "mac": {
                          "type": "string",
                          "format": "Mac EUI",
                          "description": "The Devices MAC address.",
                          "minLength": 1,
                          "maxLength": 17
                        },
                        "ipv4": {
                          "type": "string",
                          "format": "IPv4 Address",
                          "description": "The IPv4 Address assigned to this Device.",
                          "minLength": 7,
                          "maxLength": 15
                        },
                        "ipv6": {
                          "type": "string",
                          "format": "IPv6 Address",
                          "description": "**Optional:** The IPv6 Address assigned to this Device.",
                          "minLength": 2,
                          "maxLength": 39
                        },
                        "hostname": {
                          "type": "string",
                          "description": "The Hostname to use for the device (overrides the devices self declared\nhostname *option 12 from the dhcp request*).",
                          "minLength": 1,
                          "maxLength": 255
                        },
                        "online": {
                          "type": "boolean",
                          "description": "The current Online state the backend believes is valid for the device.  IF it\nis not valid, a device info message is not sent to the backend to correct it,\nbut a \"Device State Changed\" message is."
                        },
                        "dhcp": {
                          "type": "boolean",
                          "description": "DHCP Metadata already recorded about the device.\nDefault to *false* if not present."
                        },
                        "upnp": {
                          "type": "boolean",
                          "description": "UPNP Metadata already recorded about the device.\nDefault to *false* if not present."
                        },
                        "snmp": {
                          "type": "boolean",
                          "description": "SNMP Metadata already recorded about the device.\nDefault to *false* if not present."
                        },
                        "bonjour": {
                          "type": "boolean",
                          "description": "BONJOUR Metadata already recorded about the device.\nDefault to *false* if not present."
                        },
                        "smb": {
                          "type": "boolean",
                          "description": "SMB/Netbios Metadata already recorded about the device.\nDefault to *false* if not present."
                        },
                        "hua": {
                          "type": "boolean",
                          "description": "HTTP User Agent Metadata already recorded about the device.\nDefault to *false* if not present."
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "example": {
                  "message": "known devices",
                  "tstamp": 1592217870123,
                  "devices": [
                    {
                      "mac": "00:11:22:33:44:55",
                      "ipv4": "192.168.0.96",
                      "ipv6": "::ffff:c0a8:60",
                      "hostname": "PS5-Lounge",
                      "online": true,
                      "dhcp": true
                    },
                    {
                      "mac": "26:C7:71:4C:97:37",
                      "ipv4": "192.168.0.18",
                      "ipv6": "::ffff:c0a8:12",
                      "hostname": "OnkyoAmp",
                      "online": true,
                      "dhcp": true,
                      "upnp": true
                    }
                  ]
                },
                "required": [
                  "message",
                  "tstamp",
                  "mac",
                  "ipv4",
                  "online"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Device Messages",
            "description": "Messages relating to the devices connected to an Adapter and their state/configuration."
          }
        ]
      }
    },
    "DEVICE_CONFIGURATION": {
      "description": "These are messages related to the configuration of known devices.",
      "subscribe": {
        "summary": "Device Configuration",
        "description": "Device Configuration messages.",
        "message": {
          "oneOf": [
            {
              "name": "DeviceStateChanged",
              "title": "Device State Changed",
              "summary": "Advise the Adapter to change the state of the devices.",
              "description": "This message is sent from the Adapter to the Backend and either confirms\nthe adapters request to set state, OR advises that the state changed\nasynchronously without being requested by the backend.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Advise the Adapter to change the state of the devices.",
                    "const": "device state changed",
                    "minLength": 20,
                    "maxLength": 20
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "IF this is a reply to the backend setting the device state, this must equal the\ntstamp in the original request.\nIF this is an advice that a state changed asynchronously, this is the time the\nadapter changed/detected the state."
                  },
                  "id": {
                    "type": "string",
                    "description": "**Optional**, ID Field.  This field is only set as a reply to a Change Device\nState command, if that command included an ID Field.",
                    "minLength": 36,
                    "maxLength": 36,
                    "format": "UUID"
                  },
                  "devices": {
                    "type": "array",
                    "description": "An array of Device MAC addresses the state changes were applied to.  All\ndevices listed had the same state change made as listed in this message.",
                    "items": {
                      "type": "string",
                      "format": "Mac EUI",
                      "description": "The Devices MAC address.  Assumed unique per adapter.  Eg. \"00:11:22:33:44:55\"\nAlso accepts \"001122334455\" or \"00-11-22-33-44-55\"",
                      "minLength": 1,
                      "maxLength": 17
                    },
                    "minItems": 1
                  },
                  "states": {
                    "type": "array",
                    "description": "The array of services and states that change.  If this is a reply to the\nChange Device State command from the backend, then it lists the same states\nthat were requested by the backend.  If asynchronous state changes occur, the\nactual changes that ocurred are listed only.",
                    "items": {
                      "type": "object",
                      "required": [
                        "service",
                        "state"
                      ],
                      "description": "Service State",
                      "properties": {
                        "service": {
                          "type": "string",
                          "description": "The service/filter on the device which changed state.\n    - **vpn** - The Device will route through the VPN when True (if VPN is enabled)\n    - **ad-blocking** - Ad Blocking is Enabled on the device when True.\n    - **device-protection** - Device Protection is Enabled on the device when True.\n    - **internet-pause** - Internet is paused for the device when True.\n    - **youtube-restricted** - Youtube returns restricted search results when True.\n    - **safesearch** - Search Engines return \"safe\" results when True.\n    - **adultcontent** - Adult Content is \"blocked\" when True.\n\n- **online** - If the device is online or not. Only an asynchronous state change.\"\n\n\n    Note: **internet-pause** also has a timed mode.  The boolean option in this\n    message terminates any timed-pause current on the device and sets the state\n    accordingly.\n\n        **online** is only an asynchronous state change.  it is only ever sent as\n        a result of the adapter detecting a device coming online or falling offline.",
                          "enum": [
                            "vpn",
                            "ad-blocking",
                            "device-protection",
                            "internet-pause",
                            "youtube-restricted",
                            "safesearch",
                            "adultcontent",
                            "online"
                          ]
                        },
                        "state": {
                          "type": "boolean",
                          "description": "- **true** - The service/filter is enabled.\n- **false** - The service/filter is disabled."
                        }
                      },
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "example": {
                  "message": "device state changed",
                  "tstamp": 1592217870123,
                  "id": "85647580-68ec-44da-8bc8-3e7b8cf7b0e6",
                  "devices": [
                    "53:CB:12:79:E5:F6",
                    "DD:0F:91:FE:9E:00",
                    "54:A4:33:F5:D8:A4"
                  ],
                  "states": [
                    {
                      "service": "ad-blocking",
                      "state": false
                    },
                    {
                      "service": "internet-pause",
                      "state": false
                    },
                    {
                      "service": "safe-search",
                      "state": true
                    }
                  ]
                },
                "required": [
                  "message",
                  "tstamp",
                  "devices",
                  "states"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Device Messages",
            "description": "Messages relating to the devices connected to an Adapter and their state/configuration."
          }
        ]
      },
      "publish": {
        "summary": "Device Configuration",
        "description": "Device Configuration messages.",
        "message": {
          "oneOf": [
            {
              "name": "ChangeDeviceState",
              "title": "Change Device State",
              "summary": "Advise the Adapter to change the state of the devices.",
              "description": "This message is sent from the Backend to the adapter and instructs the adapter\nto make the listed state changes to the listed devices.  The message can\ncontain multiple state changes, and multiple devices.  The devices listed are\nall triggered with the same state changes.",
              "tags": [
                {
                  "name": "Adapter Messages",
                  "description": "Messages relating to the Adapter and its global state/configuration."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Advise the Adapter to change the state of the devices.",
                    "const": "change device state",
                    "minLength": 19,
                    "maxLength": 19
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the backend decided the state should change.  To be returned in the\npaired reply."
                  },
                  "id": {
                    "type": "string",
                    "description": "**Optional**, ID Field.  The Adapter does not do any processing or verification\nof the ID field, if it is set, it must be returned verbatim in the paired reply.",
                    "minLength": 36,
                    "maxLength": 36,
                    "format": "UUID"
                  },
                  "devices": {
                    "type": "array",
                    "description": "An array of Device MAC addresses the state changes are to be applied to.  All\ndevices listed are to have the same state change made as listed in this message.\nOnly after all devices states have been changed does the adapter send the paired\nreply.",
                    "items": {
                      "type": "string",
                      "format": "Mac EUI",
                      "description": "The Devices MAC address.  Assumed unique per adapter.  Eg. \"00:11:22:33:44:55\"\nAlso accepts \"001122334455\" or \"00-11-22-33-44-55\"",
                      "minLength": 1,
                      "maxLength": 17
                    },
                    "minItems": 1
                  },
                  "states": {
                    "type": "array",
                    "description": "The array of services and states to change.  If the service already has the\nrequested state on the device no change is made but the reply includes this\nstate.  If the service is not present in the states array, its state is not\nchanged, and its current state is NOT returned to the paired reply.",
                    "items": {
                      "type": "object",
                      "required": [
                        "service",
                        "state"
                      ],
                      "description": "Service State",
                      "properties": {
                        "service": {
                          "type": "string",
                          "description": "The service/filter on the device which we wish to change the state of.\n- **vpn** - The Device will route through the VPN when True (if VPN is enabled)\n- **ad-blocking** - Ad Blocking is Enabled on the device when True.\n- **device-protection** - Device Protection is Enabled on the device when True.\n- **internet-pause** - Internet is paused for the device when True.\n- **youtube-restricted** - Youtube returns restricted search results when True.\n- **safesearch** - Search Engines return \"safe\" results when True.\n- **adultcontent** - Adult Content is \"blocked\" when True.\n\n\nNote: **internet-pause** also has a timed mode.  The boolean option in this\nmessage terminates any timed-pause current on the device and sets the state\naccordingly.",
                          "enum": [
                            "vpn",
                            "ad-blocking",
                            "device-protection",
                            "internet-pause",
                            "youtube-restricted",
                            "safesearch",
                            "adultcontent",
                            "online"
                          ]
                        },
                        "state": {
                          "type": "boolean",
                          "description": "- **true** - The service/filter is enabled.\n- **false** - The service/filter is disabled."
                        }
                      },
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "example": {
                  "message": "change device state",
                  "tstamp": 1592217870123,
                  "id": "85647580-68ec-44da-8bc8-3e7b8cf7b0e6",
                  "devices": [
                    "53:CB:12:79:E5:F6",
                    "DD:0F:91:FE:9E:00",
                    "54:A4:33:F5:D8:A4"
                  ],
                  "states": [
                    {
                      "service": "ad-blocking",
                      "state": false
                    },
                    {
                      "service": "internet-pause",
                      "state": false
                    },
                    {
                      "service": "safe-search",
                      "state": true
                    }
                  ]
                },
                "required": [
                  "message",
                  "tstamp",
                  "devices",
                  "states"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Device Messages",
            "description": "Messages relating to the devices connected to an Adapter and their state/configuration."
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Message Formats",
      "description": "Generic Message Formats."
    },
    {
      "name": "AWS Errors",
      "description": "Errors Generated by AWS and sent to the adapter."
    },
    {
      "name": "Adapter Diagnostics",
      "description": "Adapter Diagnostic Messages."
    },
    {
      "name": "Adapter Messages",
      "description": "Messages relating to the Adapter and its global state/configuration."
    },
    {
      "name": "Device Messages",
      "description": "Messages relating to the devices connected to an Adapter and their state/configuration."
    }
  ]
}
