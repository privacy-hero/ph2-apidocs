{
  "asyncapi": "2.0.0",
  "defaultContentType": "application/json",
  "info": {
    "title": "Privacy Hero 2 - Adapter <-> Backend Websocket API",
    "version": "0.0.3",
    "description": "# The API for Adapter to Backend communication.\n\n## Overview\n\nAll communication is carried out through a single websocket connection per\nadapter.  The Adapter connects and sends updates to state or requests for\nconfiguration as required, and is also triggered to perform operations or\nupdate its state asynchronously from the backend through the same connection.\n\nBoth directions of the connection use the same basic message format.\n\n## Operations\n\nThe API is broken down by operation, and message type/source.\n\n### Documentation Convertions:\n\n* **SUB** [Subscribe] messages are messages which are sent to the Backend from the\nAdapter.\n* **PUB** [Publish] messages are messages which are sent to the Adapter from the\nBackend.\n\nThe API does not have any inherent Publish/Subscribe semantics.  This is a\ndocumentation convention only.\n\nAll messages to/from the adapter have a common format, which are documented in the\n*Basic Message Forms*. set of operations."
  },
  "servers": {
    "development": {
      "url": "ws2-dev.privacyhero.com",
      "description": "Development server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    },
    "qa": {
      "url": "ws2-qa.privacyhero.com",
      "description": "QA Test server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    },
    "production": {
      "url": "wss://ws2.privacyhero.com",
      "description": "Production server",
      "protocol": "wss",
      "security": [
        {
          "user-password": []
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "user-password": {
        "type": "userPassword",
        "description": "The user password follows the form <Adapter MAC>:<Adapter Secret Hash>\n\n- **Adapter MAC** is the hardware Mac address of the Adapter and it must\n    be the same as the mac used to register the adapter in production.\n    The MAC has the format *00:11:22:33:44:55* or *001122334455* or\n    *00-11-22-33-44-55* all of which are equivalent\n- **Adapter Secret Hash** is a Base64-URL encoded SHA256 hash of the\nunique id contained within the cpu or chips of the adapter.\n\nAn example user:password is (the binary secret is the string ***password*** ):\n\n*00:11:22:33:44:55:XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg*\n\nThe user/password is passed in the **Authorization** header of the http\nconnection which established the websocket."
      }
    }
  },
  "channels": {
    "COMMON": {
      "description": "The common channel is not an actual channel.  It defines the basic message\nstructure upon which all other messages are based.",
      "subscribe": {
        "summary": "Basic Message Forms",
        "description": "All messages are sent by each end of the websocket as required.  These message\nformats are equally valid for transmission from the adapter [SUB] as well as\ntransmission by the back end [PUB].\n\nThere is no strict Subscribe/Publish semantic it is documentation convention\nONLY. The websocket acts as two unidirectional message pipes and Sub/Pub\nmessages are formatted, sent, received and treated identically and without\ndistinction.",
        "message": {
          "oneOf": [
            {
              "name": "BaseMsg",
              "title": "Base Message",
              "summary": "Standard Message Base Format",
              "description": "All Privacy Hero 2 system messages have the following standard form.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                  }
                },
                "example": {
                  "message": "example",
                  "tstamp": 1592217870123
                },
                "required": [
                  "message"
                ]
              }
            },
            {
              "name": "MultiMsg",
              "title": "Multi Message",
              "summary": "Multiple Message Packet",
              "description": "All Privacy Hero 2 system messages may be bundled into a single multi-message.\nThe multi message is a standard message, which hold an array of individual\nmessages.  The individual messages when received will be treated as if they\nwere received sequentially and independently in the order they are listed.\n\nThe purpose of a Multi-Message is to cluster message processing for efficiency.\n\n## Notes regarding adapter bundling implementation.\n\nThe Backend is charged in 100ms units of execution.  It also takes time for the\nbackend to startup and begin processing.  Therefore, it is preferable, unless\nthe message is urgent, that all messages are bundled in the adapter in a minimum\nof 200ms blocks.  If an urgent message must be sent, it should be added to\nthe current bundle and the entire bundle be sent immediately.\n\nThe maximum single multi-message size must not exceed 32KB.  If adding a message\nto the bundle would cause the message size to exceed 32KB, the bundle should be\nsent and the message which would have exceeded the size is added to the next\nbundle.  IF a message is defined which does exceed 32KB, it should not be\nbundled, but MUST be sent as a discreet message.  In this case, the maximum\nmessage size must never exceed 128KB.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Multiple Message Packet.",
                    "const": "multi"
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the message was generated, unrelated to the bundled messages\ntimestamps."
                  },
                  "msgs": {
                    "type": "array",
                    "description": "An array of complete and individual messages as defined elsewhere in\nthis specification.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                        },
                        "tstamp": {
                          "type": "int",
                          "format": "int64",
                          "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                        }
                      },
                      "example": {
                        "message": "example",
                        "tstamp": 1592217870123
                      },
                      "required": [
                        "message"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 32
                  }
                },
                "example": {
                  "message": "multi",
                  "tstamp": 1592217870123,
                  "msgs": []
                },
                "required": [
                  "message",
                  "tstamp",
                  "msgs"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Message Formats",
            "description": "Generic Message Formats."
          }
        ]
      },
      "publish": {
        "summary": "Basic Message Forms",
        "description": "All messages are sent by each end of the websocket as required.  These message\nformats are equally valid for transmission from the adapter [SUB] as well as\ntransmission by the back end [PUB].\n\nThere is no strict Subscribe/Publish semantic it is documentation convention\nONLY. The websocket acts as two unidirectional message pipes and Sub/Pub\nmessages are formatted, sent, received and treated identically and without\ndistinction.",
        "message": {
          "oneOf": [
            {
              "name": "BaseMsg",
              "title": "Base Message",
              "summary": "Standard Message Base Format",
              "description": "All Privacy Hero 2 system messages have the following standard form.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                  }
                },
                "example": {
                  "message": "example",
                  "tstamp": 1592217870123
                },
                "required": [
                  "message"
                ]
              }
            },
            {
              "name": "MultiMsg",
              "title": "Multi Message",
              "summary": "Multiple Message Packet",
              "description": "All Privacy Hero 2 system messages may be bundled into a single multi-message.\nThe multi message is a standard message, which hold an array of individual\nmessages.  The individual messages when received will be treated as if they\nwere received sequentially and independently in the order they are listed.\n\nThe purpose of a Multi-Message is to cluster message processing for efficiency.\n\n## Notes regarding adapter bundling implementation.\n\nThe Backend is charged in 100ms units of execution.  It also takes time for the\nbackend to startup and begin processing.  Therefore, it is preferable, unless\nthe message is urgent, that all messages are bundled in the adapter in a minimum\nof 200ms blocks.  If an urgent message must be sent, it should be added to\nthe current bundle and the entire bundle be sent immediately.\n\nThe maximum single multi-message size must not exceed 32KB.  If adding a message\nto the bundle would cause the message size to exceed 32KB, the bundle should be\nsent and the message which would have exceeded the size is added to the next\nbundle.  IF a message is defined which does exceed 32KB, it should not be\nbundled, but MUST be sent as a discreet message.  In this case, the maximum\nmessage size must never exceed 128KB.",
              "tags": [
                {
                  "name": "Message Formats",
                  "description": "Generic Message Formats."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Multiple Message Packet.",
                    "const": "multi"
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the message was generated, unrelated to the bundled messages\ntimestamps."
                  },
                  "msgs": {
                    "type": "array",
                    "description": "An array of complete and individual messages as defined elsewhere in\nthis specification.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "This is the name of the message.  The operation that is to be performed\nand the further fields contained within the message can be identified\nbased solely on this message type string."
                        },
                        "tstamp": {
                          "type": "int",
                          "format": "int64",
                          "description": "Every adapter/backend generated message contains a unique **tstamp**\nfield.  This field defines both the time of a particular event having\nocurred, and the pairing of messages in the case of events which are\ntriggered as a result of commands from the backend.\n\nAn Adapter will always return the tstamp of any message it is\nreplying to.  IF the Adapter is generating an event asynchronously\nand not as a result of a direct comment, the tstamp contains the time\nof the event as generated by the adapter.\n\nThe Field is an integer and is the number of **milliseconds** since\nmidnight 1970, UTC.  Otherwise known as the Unix Epoch."
                        }
                      },
                      "example": {
                        "message": "example",
                        "tstamp": 1592217870123
                      },
                      "required": [
                        "message"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 32
                  }
                },
                "example": {
                  "message": "multi",
                  "tstamp": 1592217870123,
                  "msgs": []
                },
                "required": [
                  "message",
                  "tstamp",
                  "msgs"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Message Formats",
            "description": "Generic Message Formats."
          }
        ]
      }
    },
    "AWS_ERRORS": {
      "description": "These are AWS Generated error messages from the backend to the adapter.\n\nThey are generated by the AWS infrastructure, and not the backend code.\n\nIF the adapter receives one, it should assume the link is fatally compromised\nand internally record the error.  It should then drop the websocket connection\nand attempt to reconnect to the backed.  After a successful reconnection, the\nerror should be logged to the AWS backend.",
      "publish": {
        "summary": "AWS Error Messages",
        "description": "AWS Error Message from the Backend to the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "AWSInternalServerError",
              "title": "AWS Internal Server Error",
              "summary": "AWS Internal Server Error",
              "description": "This message is generated directly by AWS, and does not contain a tstamp.\n\nThis messages indicates something fatal has ocurred in the server.  Upon\nreceipt, the adapter should record the fact it ocurred, and try and reconnect\nto the backend, if a successful reconnection occurs, the adapter should log\nthe internal server error to the backend, and then continue.",
              "tags": [
                {
                  "name": "AWS Errors",
                  "description": "Errors Generated by AWS and sent to the adapter."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "An internal server error, AWS Generated",
                    "const": "Internal server error"
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "The AWS Websocket Connection ID."
                  },
                  "requestId": {
                    "type": "string",
                    "description": "The ID of the request which caused the error."
                  }
                },
                "example": {
                  "message": "Internal server error",
                  "connectionId": "d2Vic29ja2V0IElE",
                  "requestId": "cmVxdWVzdCBJRA"
                },
                "required": [
                  "message",
                  "connectionId",
                  "requestId"
                ],
                "additionalProperties": false
              }
            },
            {
              "name": "AWSServerError",
              "title": "AWS Server Error",
              "summary": "AWS Server Error",
              "description": "This message is generated directly by AWS, and does not contain a tstamp.\n\nThis messages indicates something fatal has ocurred in the server.  Upon\nreceipt, the adapter should record the fact it ocurred, and try and reconnect\nto the backend, if a successful reconnection occurs, the adapter should log\nthe internal server error to the backend, and then continue.",
              "tags": [
                {
                  "name": "AWS Errors",
                  "description": "Errors Generated by AWS and sent to the adapter."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "A general server error, AWS Generated",
                    "const": "Error"
                  },
                  "error": {
                    "type": "string",
                    "description": "The description of the Error."
                  }
                },
                "example": {
                  "message": "Error",
                  "error": "An error ocurred."
                },
                "required": [
                  "message",
                  "error"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "AWS Errors",
            "description": "Errors Generated by AWS and sent to the adapter."
          }
        ]
      }
    },
    "ADAPTER_DIAGS": {
      "description": "These are messages related to the diagnostic processes of the adapter.\n\nDiagnostics are performed as required by the adapter, and also as a result of\nexplicit command from the backend.\n\nIf the adapter requested a diagnostic check, the tstamp in the reply MUST match\nthe tstamp in the request.",
      "subscribe": {
        "summary": "Adapter Diagnostics",
        "description": "Diagnostic reports from the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "LogMsg",
              "title": "Log Message",
              "summary": "Log Message to Backend",
              "description": "This message causes the backend to log error and general diagnostic messages\nfrom the adapter to the system logs.  It can be sent anytime the adapter\nwishes to log a message.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Log Message to Backend",
                    "const": "log"
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The time the log message was generated inside the adapter. (According to the\nadapters internal clock.)"
                  },
                  "level": {
                    "type": "string",
                    "description": "The level of the log messages.",
                    "enum": [
                      "ERROR",
                      "WARNING",
                      "DEBUG"
                    ]
                  },
                  "log": {
                    "type": "string",
                    "description": "The message to be logged by the Adapter.",
                    "minLength": 1
                  }
                },
                "example": {
                  "message": "log",
                  "tstamp": 1592217870123,
                  "level": "ERROR",
                  "log": "An Error ocurred inside the Adapter"
                },
                "required": [
                  "message",
                  "tstamp",
                  "level",
                  "log"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      }
    },
    "SPEEDTEST": {
      "description": "These are messages related to the diagnostic processes of the adapter.\n\nDiagnostics are performed as required by the adapter, and also as a result of\nexplicit command from the backend.\n\nIf the adapter requested a diagnostic check, the tstamp in the reply MUST match\nthe tstamp in the request.",
      "subscribe": {
        "summary": "Speed Test",
        "description": "Speedtest Reports from the Adapter.",
        "message": {
          "oneOf": [
            {
              "name": "SpeedTest",
              "title": "Speed Test",
              "summary": "Report of Speed Test Results",
              "description": "This message causes the latest speedtest result to be logged for the\nAdapter in the backend.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Report of Speed Test Results",
                    "const": "speedtest"
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "IF the speedtest was performed as a result of a automatic or scheduled test\nthe timestamp is the time the speed test started on the adapter.\n\nIF the speedtest was conducted as a result of a command from the backend,\nthe tstamp is the tstamp from the backend request to commence the speedtest."
                  },
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "The URL of the website the speedtest was conducted against."
                  },
                  "location": {
                    "type": "string",
                    "description": "The String description of the speedtest server location"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The name of the ISP/Network operator managing the speedtest server."
                  },
                  "distance": {
                    "type": "int",
                    "format": "int64",
                    "description": "The distance is the approximate distance from the adapter to the speedtest\nserver.  The distance can be either a value that is estimated to be LESS THAN\nthe distance stated, or CLOSE TO the distance stated.\n\n* -VE = The estimate is a LESS THAN this estimate.\n* +VE = The estimate is a CLOSE TO this estimate.\n\nThe distance is measured in whole MILES."
                  },
                  "ping": {
                    "type": "array",
                    "description": "The ping result is an array with a minimum of 10 entries, that represent\nthe results from at least 10 consecutive pings to the server.\nThe ping result is a positive integer which represents the number of\nwhole milliseconds (rounded up) it took for the ping to the server to\nbe replied to.\n\nIF a ping fails, the position in the array where the result would be is set\nto null.\n\nThere can be more than 10 results, but there can not be less than 10.",
                    "items": {
                      "type": "int",
                      "format": "uint64",
                      "description": "number of milliseconds the ping took to reply, or null if no reply."
                    },
                    "minItems": 10
                  },
                  "rx": {
                    "type": "int",
                    "format": "Result in bits per second of the receive speed test.",
                    "description": "A INT"
                  },
                  "tx": {
                    "type": "int",
                    "format": "Result in bits per second of the transmit speed test.",
                    "description": "A INT"
                  },
                  "connection": {
                    "type": "string",
                    "description": "The connection which was tested.\n\n* **WAN** is the native WAN Interface of the Adapter.\n* **VPN** is the through the VPN tunnel.",
                    "enum": [
                      "WAN",
                      "VPN"
                    ]
                  }
                },
                "example": {
                  "message": "speedtest",
                  "tstamp": 1592217870123,
                  "url": "http://www.3bb.com/speedtest",
                  "location": "Phuket, Thailand",
                  "provider": "3BB",
                  "distance": -50,
                  "ping": [
                    10,
                    null,
                    7,
                    9,
                    2,
                    5,
                    10,
                    12,
                    5,
                    3
                  ],
                  "rx": 185608437,
                  "tx": 282140344,
                  "connection": "WAN"
                },
                "required": [
                  "message",
                  "tstamp",
                  "url",
                  "location",
                  "provider",
                  "distance",
                  "ping",
                  "rx",
                  "tx",
                  "connection"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      },
      "publish": {
        "summary": "Speed Test",
        "description": "Commands to instigate speedtest checks.",
        "message": {
          "oneOf": [
            {
              "name": "RunSpeedTest",
              "title": "Run Speed Test",
              "summary": "Run a Speed Test and Report the Results",
              "description": "This message causes the adapter that receives it to perfrom ping and speedtests\nand return the results in a \"speedtest\" message.",
              "tags": [
                {
                  "name": "Adapter Diagnostics",
                  "description": "Adapter Diagnostic Messages."
                }
              ],
              "payload": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Run a Speed Test and Report the Results",
                    "const": "run-speedtest"
                  },
                  "tstamp": {
                    "type": "int",
                    "format": "int64",
                    "description": "The request timestamp of the speedtest, this tstamp must be returned\nin the reply with the results as the message tstamp."
                  },
                  "connection": {
                    "type": "string",
                    "description": "OPTIONAL: The connection to test.  If not present, the test is to be preformed\nagainst the native WAN interface.\n\n* **WAN** is the native WAN Interface of the Adapter.\n* **VPN** is the through the VPN tunnel.",
                    "enum": [
                      "WAN",
                      "VPN"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "format": "url",
                    "description": "OPTIONAL: URL to perform the speedtest against.  IF not supplied use\nthe best url probed from speedtest server lists."
                  }
                },
                "example": {
                  "message": "run-speedtest",
                  "tstamp": 1592217870123,
                  "connection": "VPN",
                  "url": "http://www.3bb.com/speedtest"
                },
                "required": [
                  "message",
                  "tstamp"
                ],
                "additionalProperties": false
              }
            }
          ]
        },
        "tags": [
          {
            "name": "Adapter Diagnostics",
            "description": "Adapter Diagnostic Messages."
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Message Formats",
      "description": "Generic Message Formats."
    },
    {
      "name": "AWS Errors",
      "description": "Errors Generated by AWS and sent to the adapter."
    },
    {
      "name": "Adapter Diagnostics",
      "description": "Adapter Diagnostic Messages."
    }
  ]
}
