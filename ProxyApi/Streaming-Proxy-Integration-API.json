{
  "openapi": "3.1.0",
  "info": {
    "title": "Streaming Proxy Integration API",
    "version": "1.0",
    "summary": "API to integrate/Configure the Streaming Proxy",
    "description": "This API allows a streaming proxy to be configured and integrated with an external stream relocation service.",
    "license": {
      "name": "Proprietary",
      "identifier": "LicenseRef-Proprietary"
    },
    "contact": {
      "name": "HelpOn Inc."
    }
  },
  "servers": [
    {
      "url": "http://166.70.53.208:3000",
      "description": "Test Proxy"
    }
  ],
  "paths": {
    "/v1/provision": {
      "post": {
        "summary": "Add Provisioned Clients",
        "operationId": "post-v1-provision",
        "responses": {
          "200": {
            "description": "# OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invalid_add": {
                      "type": "array",
                      "minItems": 0,
                      "uniqueItems": true,
                      "description": "The list of any client address which could not be added, because the address is malformed.",
                      "items": {
                        "type": "string",
                        "example": "123.abc.000.000"
                      }
                    },
                    "invalid_del": {
                      "type": "array",
                      "description": "The list of any client address which could not be deleted, because the address is malformed.",
                      "minItems": 0,
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "example": "123.456.789.000"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "# Unauthorized\n\nThe Bearer Token is Invalid, request rejected."
          },
          "422": {
            "description": "# Unprocessable Entity\n\nThe parameters of the operation are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "details": {
                      "type": "string",
                      "description": "The reason why the parameters/body could not be processed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "# Internal Server Error\n\nAn unexpected error occured in the server adding the clients ip."
          }
        },
        "description": "Advises the proxy which client ip addresses are authorized to use the proxy.  Only clients which have a public ip address matching the list supplied to this call will be allowed to connect.  The supplied values add  (or delete) to the list of provision clients, and do not replace it.  The same IP address may be added/deleted multiple times without error, however the proxy will only add/delete the ip address/range once when first requested.  It is not an error to delete a client address that has not been previosuly added, it is equivalent to a no-op.\n\nA single call may add only, or delete only, or add and delete simultaneously.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "add": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 0,
                    "description": "The Array of IPv4 Addresses/Ranges",
                    "items": {
                      "type": "string",
                      "minLength": 7,
                      "maxLength": 15,
                      "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}$"
                    }
                  },
                  "del": {
                    "type": "array",
                    "description": "set delete to true to delete the listed ipv4 addresses.  It may be omitted or set to false for adding.",
                    "uniqueItems": true,
                    "minItems": 0,
                    "items": {
                      "type": "string",
                      "minLength": 7,
                      "maxLength": 15,
                      "pattern": "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}$"
                    }
                  }
                }
              },
              "examples": {
                "Provisioning three individual IPv4": {
                  "value": {
                    "add": [
                      "183.89.192.99",
                      "183.89.192.100",
                      "183.89.192.101"
                    ]
                  }
                },
                "Provisioning a single client": {
                  "value": {
                    "add": [
                      "183.89.192.211"
                    ]
                  }
                },
                "Delete two clients": {
                  "value": {
                    "del": [
                      "183.89.192.99",
                      "183.89.192.100"
                    ]
                  }
                },
                "Add two clients and delete three.": {
                  "value": {
                    "add": [
                      "183.89.192.200",
                      "183.89.192.84"
                    ],
                    "del": [
                      "183.89.192.211",
                      "183.89.192.45",
                      "183.89.192.3"
                    ]
                  }
                }
              }
            }
          },
          "description": "An array of client IPv4 Addresses or CIDRs to be added or deleted to the allowed list of client addresses."
        },
        "tags": [
          "Client"
        ],
        "security": [
          {
            "API_Key": []
          }
        ]
      },
      "parameters": [],
      "get": {
        "summary": "Get Provisioned Clients",
        "operationId": "get-v1-provision",
        "responses": {
          "200": {
            "description": "# OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ipv4": {
                      "type": "array",
                      "minItems": 0,
                      "uniqueItems": true,
                      "description": "The full list of client ip addresses currently allowed to send traffic through the proxy.",
                      "items": {
                        "type": "string",
                        "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
                        "minLength": 7,
                        "maxLength": 18
                      }
                    }
                  },
                  "required": [
                    "ipv4"
                  ]
                },
                "examples": {
                  "Three Individual IP Addresses and One Range": {
                    "value": {
                      "ipv4": [
                        "183.89.192.99",
                        "183.89.192.100",
                        "183.89.192.101",
                        "183.89.193.00/24"
                      ]
                    }
                  },
                  "No Clients provisioned": {
                    "value": {
                      "ipv4": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "# Unauthorized\n\nThe Bearer Token is Invalid, request rejected."
          },
          "422": {
            "description": "# Unprocessable Entity\n\nThe parameters of the operation are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "details": {
                      "type": "string",
                      "description": "The reason why the parameters/body could not be processed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "# Internal Server Error"
          }
        },
        "description": "Get the full current list of provisioned client ip addresses.",
        "tags": [
          "Client"
        ],
        "security": [
          {
            "API_Key": []
          }
        ]
      }
    },
    "/v1/allowed_domains": {
      "put": {
        "summary": "Set List of Allowed Domains",
        "operationId": "v1-domains",
        "responses": {
          "200": {
            "description": "# OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "added": {
                      "type": "integer",
                      "example": 53,
                      "minimum": 0,
                      "description": "The number of valid domains used as allowable domains."
                    },
                    "invalid": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 0,
                      "description": "If any domains were invalid, the invalid domains that were rejected are listed here.",
                      "items": {
                        "type": "string",
                        "example": "**bad-wildcard.com"
                      }
                    }
                  },
                  "required": [
                    "invalid"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "added": 53,
                      "invalid": [
                        "**bad-wildcard.com"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "# Unauthorized\n\nThe Bearer Token is Invalid, request rejected."
          },
          "422": {
            "description": "# Unprocessable Entity\n\nThe parameters of the operation are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "details": {
                      "type": "string",
                      "description": "The reason why the parameters/body could not be processed."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "# Internal Server Error"
          }
        },
        "description": "Add list of domains that are allowed to be proxied through the server.  This will replace any previous list of acceptable domains which will persist until replaced by another call to this endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "domains": {
                    "type": "array",
                    "description": "An array of optionally wildcarded domains allowed to be proxied through the proxy.  Domains without a wildcard `*.`  *(asterisk dot)* will match exactly.  Domains with a wildcard `*.` will match all domains with the suffix matching the string following the wildcard `*.`",
                    "minItems": 1,
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^\\*?(?:\\.*[a-z0-9\\-]+)*$"
                    }
                  }
                },
                "required": [
                  "domains"
                ]
              },
              "examples": {
                "wildcarded domains": {
                  "value": {
                    "domains": [
                      "*.netflix.com",
                      "*.nflxvideo.net",
                      "*.nflximg.com",
                      "*.nflxso.net",
                      "*.nflxext.com",
                      "*.fast.com",
                      "*.netflix.net",
                      "*.nflximg.net",
                      "*.onetrust.com"
                    ]
                  }
                }
              }
            }
          },
          "description": "An Array of wildcarded domains the proxy will allow."
        },
        "tags": [
          "Client"
        ],
        "security": [
          {
            "API_Key": []
          }
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "API_Key": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {}
  },
  "security": [
    {
      "API Key - 1": []
    }
  ],
  "tags": [
    {
      "name": "admin"
    },
    {
      "name": "Client"
    }
  ]
}