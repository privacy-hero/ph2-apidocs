Clients Account
    Account ID - GUID
    email address
    Chargebee User id

subscription:
    subscription id
    status



Adapter Data
    Client ID - GUID

    Adapter ID - GUID
    Mac Address

    Shared Secret - Varies with hardware type, used as a password on connection.

    ip4 lan address (last known/current)
    ip6 lan address (last known/current)

    ip4 wan address (if wan not connected, it is the last known)
    ip6 wan address (if wan not connected, it is the last known)

    ip4 vpn address  (if vpn not connected, it is the last known)
    ip6 vpn address  (if vpn not connected, it is the last known)

    type
    description
    last time it came online
    first time it was registered
    customer given name
    subscription id
    activation code
    geolocation Country

    VPN Connection State
    VPN last State change time

    Adapter WAN State
    Adapter WAN State last change time

    adapter level settings:
        VPN ON/off + when
        Ad blocking ON/off + when
        Streaming Relocation on/OFF + when
            IN USA default is OFF
            Outside USA default is ON
        Malware/Phising ON/off + when

        data cap - int64 bytes

        last speed test result - int64 bits per second
        last speed test time - datetime - int64 unix time

        best speed test result - int64 bits per second
        best speed test time - datetime - int64 unix time

        last ping test result - int64 - time in milliseconds
        last ping test time - datetime - int64 unix time

        best ping test result - int64 - time in milliseconds
        best ping test time - datetime - int64 unix time

Extra Adapter Configuration:
    telemetry:
        rlog: true/false ??
    actions:
        reset: true/false ??
        reauth: tru/false ??
    support:
        remote: "" ??

    wifi:
        ssid: string  .. We will need multiple ssid, because we have 2.4G and
                         maybe in the future could have multiple 5ghz like
                         routers do now.
        key: string    .. could use the same key for different bands. But that
                          should be a UI decision.

    proxy:
        proxy_domains: array
            id: <service id>
            name: string "nbc_sports"
            match:
                positive: array
                    regex string
                negative: array
                    regex string
            servers: array
                server ip address string
            proxy_ips: a list of ip ranges, instead of regex

    firmware: "number string"  ??  I guess a firmware ID/checksum

    dns_forwarding:
        default: {
            policy: "policy string" eg "sequential"  todo, get all policies.
            server_name: "server host name" eg "cloudflare-dns.com"
            endpoints: [ array of protocol//host address
                tls://1.1.1.1
                tls://9.9.9.9
            ]
        }


Settings for streaming.

    Portable Streams are ones where the streaming account can work anywhere (like
        netflix)
    Non portable ones are ones where you have a subscription in a country, and it
        only works in that country.

    Command to (for a non-portable service) set the country it uses.
    Command to (for a portable service) set the country it uses (including home
        country if there are no proxys)

    List of all non-portable services, and available countries.
    selected country. (defaults to adapters country)

    List of portable services, and available countries.
    Defaults, adapter country, USA, first on list.



Profile
    id - guid
    adapter id
    system profile true/false (System Profile, eg "Shared")
    name - set by user if not default
    icon - set by user if not default (Text string)

    Restrict Youtube - on/OFF
    Safe Search - ON/off

    bedtime delay - current delay in minutes

    internet paused (time) - 0 is off, -1 is indefinite, +ve is paused
      This is a macro function, which causes the pause time to be
      added/subtracted to the devices in the profile.
      Not a profile setting per se.

    vpn on/off + when

    ad blocking on/off
    protection on/off

    For each day:
        bedtime start
        bedtime end


device
    id - guid
    mac address

    manufacturer - string
    ip4 address - string
    ip6 address - string

    adapter id
    profile id
    system name - name given by the system automatically
    user name - name assigned by the user
        device name is system name if user name is not set.
    system type - system identified type of the device
    user type - user assigned type of the device.
        device type is system type if user type is not set.
    Current State (Online/offline)
        + State time (int64 unix time of when state changed)
    First seen (First time it was discovered - unix64 time)


    device level settings:
        Ad Blocking Pause (time)
        Internet Pause (time)
        VPN Pause (time) ??

        VPN On/Off (persistent)
        Ad Blocking On/Off (persistent)
        Device Protection On/Off (persistent)

    device level records: (read only by client)
        Internet Usage:
            90 x 24 usage records:
                each record is:
                    datetime of record (int64 unix time)
                    UL usage in that hour (int64 bytes)
                    DL usage in that hour (int64 bytes)

```
Current:
    Adapter:
        VPN ON/off
        Ad blocking ON/off
        Streaming Relocation on/OFF
        Malware/Phising ON/off

    Profile:
        vpn on/off
        ad blocking on/off
        protection on/off

        Restrict Youtube - on/OFF
        Safe Search - ON/off
        internet paused (time)

        For each day:
            bedtime start
            bedtime end
        bedtime start delay - current delay in minutes

    Device:
        VPN On/Off
        Ad Blocking On/Off
        Device Protection On/Off

        Ad Blocking Pause (time)
        Internet Pause (time)
        VPN Pause (time)```

```
Proposed:

    Adapter:
        VPN ON/off
        Ad blocking ON/off
        Streaming Relocation on/OFF
        Malware/Phising ON/off

    Profile:
        Restrict Youtube - on/OFF
        Safe Search - ON/off
        internet paused (time)

        For each day:
            bedtime start
            bedtime end
        bedtime start delay - current delay in minutes

    Device:
        VPN Bypass (Permanent/Timed)
        Ad Blocking Bypass (Permanent/Timed)
        Device Protection Bypass (Permanent/Timed)
```


Push Notifications, using AWS SNS (Simple Notification Service)
Need:
1.1 API Key for Firebase (Android and Web Messaging) (Google)
         Note: It looks like firebase can be used for Web (except safari) and Android
1.2 API Certificate for  IOS Push Certificate (Apple APNS) (IOS Apps)
1.3 API Certificate for Mac Push Certificate (Apple APNS) (Safari Web)


Upon subscription to notifications:
    App/Webpage sends "device token" and "api-type" (Firebase/IOS/Mac) to backend.

    IF no-platform ARN, create platform ARN using stored credentials. Store ARN for
        later use.

    Store Device-token and API Type with client record.
    (We may need to store multiple, in case client uses multiple devices?)

    call get endpoint attributes on the platform endpoint ARN

    if (while getting the attributes a not-found exception is thrown)
        # the platform endpoint was deleted
        call create platform endpoint with the latest device token
        store the returned platform endpoint ARN
    else
        if (the device token in the endpoint does not match the latest one) or
            (get endpoint attributes shows the endpoint as disabled)
            call set endpoint attributes to set the latest device token and then enable the platform endpoint
        endif
    endif

    After this we have a global Notification ARN for a service.
    A Client Device-token and api type selection
    The endpoint ARN

    see: https://docs.aws.amazon.com/sns/latest/dg/mobile-platform-endpoint.html



Timezone:
    Make a common timezone record.
    Timezone name is a string from the linux tzdata set ie "America/Chicago"
        AKA IANA Timezone Name
        Android uses these id's:
            TimeZone tz = TimeZone.getTimeZone("America/Los_Angeles");
        Browser javascript:
            Intl.DateTimeFormat().resolvedOptions().timeZone
        IOS:
            NSTimeZone *timeZone = [NSTimeZone localTimeZone];
            NSString *tzName = [timeZone name];
    We supply tzdata to the adapter as:
    GMT Offset, minutes.
        Optional Daylight Saving Rule
            Previous Transition DateTime stamp
            Previous Transition Localtime Offset
            Next Transition DateTime stamp
            Next Transition Localtime Offset.

API Call description format:

        # Usage
        Causes an email to be sent to the customer requiring them
        to confirm they wish to mark the account for deletion.

        The Email contains the callback as an embedded link which
        will call back into the initiating application.

        The URL passed as the callback must be able to accept three parameter in
        the url of the form:
        ```
        callback.url/path?verify=<token>&pw=<false/true>&exp=<time>
        ```
         - **verify** is the verification token to be sent back to the API server by
            the app on the **/v1/auth/confirmcustomer** call.
         - **pwd** specifies that a confirmation password must be prompted from
            the Client, and supplied to the API in the **/v1/auth/confirmcustomer**
            call.
         - **exp** specifies when the verification token will expire.  Any call
            to **/v1/auth/confirmcustomer**` after this time will fail.

        ## Security Requirements
          - **appKey** **MUST NOT** be present in the call.
          - **clientToken** **MUST** be present, not in need of renewal and valid.

        ## Parameters
          - **email**: The email address the customer wants the Account email to be
        directed to.
          - **callback**: The complete URL, minus parameters, which is embedded in the email sent
        to the customer to confirm their account creation. It must point to the
        app which instigated this request.

        ## Message Flow Diagrams

        "400":
          description: |-
            General Request processing error.  Possible errors are:
            * `"Internal Server Error."` - Fatal uncategorized error in server.
            * `"Required Parameters missing or malformed."` - JSON Message Body
            Error.
            * `"Insecure Password"` - Password failed security strength check.
            * `"Old Password doesn't match"` - Old Password failed security check.
          content:
            application/json:
              schema:
                $ref: "../../inc/response.oas3.yml#/components/schemas/Nack"
              example:
                error: "Internal Server Error."


                    "settings": {
                      "current": {
                        "enabled": true,
                        "country": "US"
                      },
                      "pending": {
                        "country": "GB"
                      }

                    "settings": {
                      "current": {
                        "enabled": true,
                        "country": "GB"
                      },
                      "pending": {
                        "enabled": false
                      }
                    }
