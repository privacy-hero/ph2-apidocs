{
  "openapi": "3.0.2",
  "info": {
    "title": "Privacy Hero 2 - Mothership API",
    "version": "0.0.9",
    "description": "The complete backend API for the Privacy Hero 2.\n\nThe backend server infrastructure is known as the *\"Mothership\"*\n\nThis API Documentation may be viewed at:\n  - **[PrivacyHero2 API - RapiDoc/PDF](.)**\n  - [PrivacyHero2 API - Swagger UI](./index-swui.html)\n  - [PrivacyHero2 API - Redocly](./index-redocly.html)\n  - [Download API JSON](./API/PH2-API.oas3.json)",
    "license": {
      "name": "Copyright Â© 2020 HelpOn Inc. All Rights Reserved",
      "url": "http://privacy-hero.github.io/ph2-apidocs/LICENSE.html"
    },
    "contact": {
      "name": "API Support (Steven Johnson)",
      "url": "http://www.example.com/support",
      "email": "sakurainds@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://api2.privacyhero.com/{stage}",
      "description": "The API deployment URL.",
      "variables": {
        "stage": {
          "enum": [
            "dev",
            "qa",
            "prod"
          ],
          "default": "prod",
          "description": "Deployment Stages"
        }
      }
    },
    {
      "url": "https://{awsid}.execute-api.us-east-1.amazonaws.com/dev",
      "description": "Development URL",
      "variables": {
        "awsid": {
          "default": "999999",
          "description": "The ID for your dev AWS deployment"
        }
      }
    }
  ],
  "components": {
    "schemas": {
      "email-address": {
        "type": "string",
        "format": "email",
        "minLength": 6,
        "maxLength": 320,
        "pattern": "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\\\x01-\\\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])",
        "example": "example@email.com",
        "description": "An email address"
      },
      "url-callback": {
        "type": "string",
        "format": "URL",
        "minLength": 1,
        "maxLength": 2000,
        "nullable": true,
        "pattern": "^[\\w.-]+:\\/\\/[\\w.-]+(\\/[\\w.-]+)*$",
        "description": "A URL, including relative references.  Will accept http/https and\nrelative urls.",
        "example": "ph2app://absolute.url"
      },
      "Ack": {
        "type": "object",
        "required": [
          "msg"
        ],
        "additionalProperties": false,
        "properties": {
          "msg": {
            "type": "string",
            "format": "Text Message",
            "nullable": true,
            "minLength": 0,
            "maxLength": 1024,
            "pattern": "^([\\w\\W])*$",
            "example": "OK."
          }
        }
      },
      "Nack": {
        "type": "object",
        "required": [
          "error"
        ],
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "format": "Text Message",
            "nullable": true,
            "minLength": 0,
            "maxLength": 1024,
            "pattern": "^([\\w\\W])*$",
            "example": "Unauthorized"
          }
        }
      },
      "GW_NegAuth": {
        "type": "object",
        "required": [
          "message"
        ],
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "format": "Text Message",
            "nullable": true,
            "minLength": 0,
            "maxLength": 1024,
            "pattern": "^([\\w\\W])*$",
            "example": "User is not authorized to access this resource"
          }
        }
      },
      "GW_InternalError": {
        "type": "object",
        "required": [
          "message"
        ],
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string",
            "format": "Text Message",
            "nullable": true,
            "minLength": 0,
            "maxLength": 1024,
            "pattern": "^([\\w\\W])*$",
            "example": null
          }
        }
      },
      "ph2-bearer-token": {
        "type": "string",
        "format": "JWT",
        "description": "Privacy Hero 2 API Bearer Token (Based on JWT)",
        "minLength": 64,
        "maxLength": 1024,
        "pattern": "^([A-Za-z0-9-_])+\\.([A-Za-z0-9-_])+(\\.[A-Za-z0-9-_]+)?$",
        "example": "AeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MTYyMzkwMjJ9AB"
      },
      "epoch-timestamp": {
        "type": "integer",
        "format": "int64",
        "minimum": 1587732975,
        "maximum": 4743406575,
        "nullable": true,
        "description": "A Time, expressed as seconds since Jan 01 1970. (UTC). **NULL** = unknown",
        "example": 1587732975
      },
      "password": {
        "type": "string",
        "format": "password",
        "minLength": 8,
        "maxLength": 64,
        "example": "my p455w0rd",
        "pattern": "^[ -~]*$"
      },
      "epoch-timestamp-nonull": {
        "type": "integer",
        "format": "int64",
        "minimum": 1587732975,
        "maximum": 4743406575,
        "description": "A Time, expressed as seconds since Jan 01 1970. (UTC).",
        "example": 1587732975
      },
      "Authorized": {
        "type": "object",
        "description": "This response contains the clients credentials to use on subsequent API\ncalls relating to the client.  These credentials uniquely identify the\nclient and their account.\n\n  - **bearer**: The Client Authorization Bearer token required to be\n  sent in the **Authorization: Bearer** header of all API calls that are\n  called on behalf of the Client.\n  - **renew**: The Epoch Time, at which user access will expire with\n  this token. Renew before this time, for uninterrupted access.  Renewal\n  may occur up until **exp** time.\n  - **exp**: The Epoch Time, at which the token will completely expire\n  and may not be used for renewal.  After this time the user must\n  re-authenticate to get a new bearer token.",
        "required": [
          "bearer",
          "renew",
          "exp"
        ],
        "additionalProperties": false,
        "properties": {
          "bearer": {
            "$ref": "#/components/schemas/ph2-bearer-token"
          },
          "renew": {
            "$ref": "#/components/schemas/epoch-timestamp-nonull"
          },
          "exp": {
            "$ref": "#/components/schemas/epoch-timestamp-nonull"
          }
        }
      },
      "activation-code": {
        "type": "string",
        "pattern": "^....-....$",
        "minLength": 9,
        "maxLength": 9,
        "description": "Adapter/Router activation code. Note: pattern and length are\nplaceholders until the format is finalized.",
        "example": "????-????"
      },
      "uuid": {
        "type": "string",
        "format": "UUID",
        "description": "Unique Identifier",
        "maxLength": 36,
        "minLength": 36,
        "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
        "example": "cd73b915-89a4-4971-9d86-bce91786b12a"
      },
      "mac": {
        "type": "string",
        "format": "EUI-48",
        "pattern": "^(([0-9a-fA-F]{2}-){5})|(([0-9a-fA-F]{2}-){5})([0-9a-fA-F]{2})$",
        "maxLength": 17,
        "minLength": 17,
        "description": "An EUI-48 formatted mac address.",
        "example": "00-00-5E-DF-98-EB"
      },
      "adapter-type": {
        "type": "string",
        "enum": [
          "Router-V1"
        ],
        "description": "The hardware type of the adapter/router."
      },
      "Adapter-Base": {
        "type": "object",
        "required": [
          "mac",
          "type",
          "desc"
        ],
        "additionalProperties": false,
        "properties": {
          "mac": {
            "$ref": "#/components/schemas/mac"
          },
          "type": {
            "$ref": "#/components/schemas/adapter-type"
          },
          "desc": {
            "type": "string",
            "minLength": 1,
            "maxLength": 64,
            "pattern": "^[\\S ]+$",
            "description": "A description of the hardware of the adapter/router.",
            "example": "Privacy Hero 2 - Router V1"
          }
        }
      },
      "Adapter-Unassociated": {
        "type": "object",
        "required": [
          "adapter",
          "since"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "adapter": {
            "$ref": "#/components/schemas/Adapter-Base"
          },
          "since": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        }
      },
      "Adapter-Unassociated-Array": {
        "type": "array",
        "maxItems": 10,
        "items": {
          "$ref": "#/components/schemas/Adapter-Unassociated"
        }
      },
      "adapter-name": {
        "type": "string",
        "format": "text",
        "nullable": true,
        "description": "The name of an adapter.",
        "minLength": 0,
        "maxLength": 64,
        "pattern": "^[\\w\\W]+$",
        "example": "Home Office Adapter"
      },
      "iso3166-country": {
        "type": "string",
        "format": "ISO3166 Code",
        "example": "US",
        "enum": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BQ",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "CV",
          "KH",
          "CM",
          "CA",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CW",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "SZ",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "VA",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MK",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SX",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "SS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "US",
          "UM",
          "UY",
          "UZ",
          "VU",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "YE",
          "ZM",
          "ZW"
        ],
        "description": "an ISO3166 country code"
      },
      "iana-timezone": {
        "type": "string",
        "format": "IANA Timezone",
        "description": "IANA Timezone name.",
        "minLength": 3,
        "maxLength": 44,
        "pattern": "^([A-Za-z-_]){1,14}\\/([A-Za-z-_]){1,14}(\\/([A-Za-z-_]){1,14})?$",
        "default": "Etc/UTC",
        "example": "America/Chicago"
      },
      "ip4": {
        "type": "string",
        "format": "IPv4 Address",
        "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
        "minLength": 7,
        "maxLength": 15,
        "description": "An IP4 formatted IP Address",
        "example": "192.168.0.55"
      },
      "ip6": {
        "type": "string",
        "format": "IPv6 Address",
        "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$",
        "minLength": 3,
        "maxLength": 45,
        "description": "An IP6 formatted IP Address",
        "example": "2001:db8:85a3::8a2e:370:7334"
      },
      "state": {
        "type": "object",
        "required": [
          "state",
          "since"
        ],
        "additionalProperties": false,
        "properties": {
          "state": {
            "type": "boolean",
            "nullable": true,
            "description": "**true**=Active, **false**=Inactive, **null**=Unknown"
          },
          "since": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        },
        "description": "The current known value of the state, and the time that it changed."
      },
      "wifi-settings": {
        "type": "object",
        "description": "Settings for an individual wifi network",
        "required": [
          "enabled",
          "ssid",
          "key"
        ],
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "is the wifi network enabled.",
            "default": true
          },
          "ssid": {
            "type": "string",
            "format": "ssid",
            "minLength": 1,
            "maxLength": 32,
            "pattern": "^[^!#;+\\]\\/\"\\t][^+\\]\\/\"\\t]{0,30}[^ !#;+\\]\\/\"\\t]$|^[^ !#;+\\]\\/\"\\t]$",
            "description": "The SSID of the wifi network",
            "default": "PrivacyHero2",
            "example": "PrivacyHero2"
          },
          "key": {
            "type": "string",
            "format": "WPA-PSK passphrase",
            "minLength": 8,
            "maxLength": 63,
            "pattern": "^[ -~]*$",
            "nullable": true,
            "default": "r4nd0m k3y",
            "example": "r4nd0m k3y",
            "description": "The WPA-PSK passphrase to secure the network. **null**=Open Wifi\nNetwork"
          }
        }
      },
      "datacap": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0,
        "maximum": 1000000000000000000,
        "description": "Data Cap in Bytes per month. 0 = no data cap"
      },
      "datacaps": {
        "type": "array",
        "description": "A per-month Data Cap.  An Empty Array is no data cap.",
        "minItems": 0,
        "maxItems": 2,
        "items": {
          "$ref": "#/components/schemas/datacap"
        }
      },
      "Adapter-Cfg": {
        "type": "object",
        "description": "The Adapter configuration settings.",
        "additionalProperties": false,
        "properties": {
          "wifi": {
            "$ref": "#/components/schemas/wifi-settings"
          },
          "data-cap": {
            "$ref": "#/components/schemas/datacaps"
          },
          "vpn": {
            "type": "boolean",
            "description": "VPN: **true**=Enabled, **false**=Disabled."
          },
          "adblock": {
            "type": "boolean",
            "description": "Ad Blocking: **true**=Enabled, **false**=Disabled."
          },
          "streaming": {
            "type": "boolean",
            "description": "Streaming Relocation: **true**=Enabled, **false**=Disabled"
          },
          "malware": {
            "type": "boolean",
            "description": "Malware/Phishing protection: **true**=Enabled, **false**=Disabled"
          }
        }
      },
      "Adapter-Settings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "settings": {
            "type": "object",
            "description": "The settings of the Adapter/Router.",
            "required": [
              "current"
            ],
            "additionalProperties": false,
            "properties": {
              "current": {
                "$ref": "#/components/schemas/Adapter-Cfg"
              },
              "pending": {
                "$ref": "#/components/schemas/Adapter-Cfg"
              }
            }
          }
        }
      },
      "speed-bps": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0,
        "maximum": 4294967295,
        "nullable": true,
        "description": "Bits per second speed result. **NULL** = Unknown."
      },
      "speed-diag": {
        "type": "object",
        "description": "Speed Diagnostic Results.",
        "required": [
          "speed",
          "when"
        ],
        "additionalProperties": false,
        "properties": {
          "speed": {
            "$ref": "#/components/schemas/speed-bps"
          },
          "when": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        }
      },
      "Adapter-Speed-Diags": {
        "type": "object",
        "description": "Adapter Speed Diagnostic Results\n- **latest**: Result of last speed test\n- **averages**: Historical speed test results\n- **running**: Time the current speed test is expected to complete.",
        "additionalProperties": false,
        "properties": {
          "latest": {
            "$ref": "#/components/schemas/speed-diag"
          },
          "averages": {
            "type": "object",
            "description": "Historical Averages",
            "additionalProperties": false,
            "properties": {
              "days7": {
                "$ref": "#/components/schemas/speed-bps"
              },
              "days30": {
                "$ref": "#/components/schemas/speed-bps"
              },
              "alltime": {
                "$ref": "#/components/schemas/speed-bps"
              }
            }
          },
          "running": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        }
      },
      "latency-ms": {
        "type": "integer",
        "format": "uint16",
        "minimum": 0,
        "maximum": 65535,
        "nullable": true,
        "description": "Latency measured in milliseconds. **NULL** = Unknown."
      },
      "latency-percentage": {
        "type": "integer",
        "format": "uint16",
        "minimum": 0,
        "maximum": 10000,
        "nullable": true,
        "description": "Percentage of successful tests (*100). Eg. 9876 = 98.76%. **NULL** = Unknown."
      },
      "latency-diag": {
        "type": "object",
        "description": "latency diagnostic result",
        "required": [
          "latency",
          "completion"
        ],
        "additionalProperties": false,
        "properties": {
          "latency": {
            "$ref": "#/components/schemas/latency-ms"
          },
          "completion": {
            "$ref": "#/components/schemas/latency-percentage"
          }
        }
      },
      "Adapter-Latency-Diags": {
        "type": "object",
        "description": "Adapter Latency Diagnostic Results\n- **latest**: Result of last latency test\n- **averages**: Historical latency test results\n- **running**: Time the current latency test is expected to complete.",
        "additionalProperties": false,
        "properties": {
          "latest": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "result": {
                "$ref": "#/components/schemas/latency-diag"
              },
              "when": {
                "$ref": "#/components/schemas/epoch-timestamp"
              }
            }
          },
          "averages": {
            "type": "object",
            "description": "Historical Averages",
            "additionalProperties": false,
            "properties": {
              "days7": {
                "$ref": "#/components/schemas/latency-diag"
              },
              "days30": {
                "$ref": "#/components/schemas/latency-diag"
              },
              "alltime": {
                "$ref": "#/components/schemas/latency-diag"
              }
            }
          },
          "running": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        }
      },
      "Adapter-Diags": {
        "type": "object",
        "description": "Results from the last and best diagnostic tests",
        "additionalProperties": false,
        "properties": {
          "speed": {
            "type": "object",
            "description": "Network Speed test results",
            "additionalProperties": false,
            "properties": {
              "tx": {
                "$ref": "#/components/schemas/Adapter-Speed-Diags"
              },
              "rx": {
                "$ref": "#/components/schemas/Adapter-Speed-Diags"
              }
            }
          },
          "ping": {
            "$ref": "#/components/schemas/Adapter-Latency-Diags"
          }
        }
      },
      "Adapter": {
        "type": "object",
        "required": [
          "id",
          "hw",
          "location",
          "timezone",
          "ip",
          "registered",
          "state"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "hw": {
            "$ref": "#/components/schemas/Adapter-Base"
          },
          "name": {
            "$ref": "#/components/schemas/adapter-name"
          },
          "location": {
            "$ref": "#/components/schemas/iso3166-country"
          },
          "timezone": {
            "$ref": "#/components/schemas/iana-timezone"
          },
          "ip": {
            "type": "object",
            "required": [
              "lan",
              "wan",
              "vpn"
            ],
            "description": "The current or last known IP addresses of the adapter/router.",
            "additionalProperties": false,
            "properties": {
              "lan": {
                "type": "object",
                "required": [
                  "ip4"
                ],
                "description": "The Local network IP addresses.",
                "additionalProperties": false,
                "properties": {
                  "ip4": {
                    "$ref": "#/components/schemas/ip4"
                  },
                  "ip6": {
                    "$ref": "#/components/schemas/ip6"
                  }
                }
              },
              "wan": {
                "type": "object",
                "required": [
                  "ip4"
                ],
                "description": "The ISP Native IP addresses.",
                "additionalProperties": false,
                "properties": {
                  "ip4": {
                    "$ref": "#/components/schemas/ip4"
                  },
                  "ip6": {
                    "$ref": "#/components/schemas/ip6"
                  }
                },
                "example": {
                  "ip4": "183.89.52.15"
                }
              },
              "vpn": {
                "type": "object",
                "required": [
                  "ip4"
                ],
                "description": "The VPN endpoint IP addresses.",
                "additionalProperties": false,
                "properties": {
                  "ip4": {
                    "$ref": "#/components/schemas/ip4"
                  },
                  "ip6": {
                    "$ref": "#/components/schemas/ip6"
                  }
                },
                "example": {
                  "ip4": "177.11.22.13",
                  "ip6": "2001:4860:4860::8844"
                }
              }
            }
          },
          "registered": {
            "$ref": "#/components/schemas/epoch-timestamp"
          },
          "state": {
            "type": "object",
            "description": "The current state of the Adapter/Router.",
            "required": [
              "online",
              "vpn",
              "ad-blocking",
              "stream-relocation",
              "malware-phising"
            ],
            "additionalProperties": false,
            "properties": {
              "online": {
                "$ref": "#/components/schemas/state"
              },
              "vpn": {
                "$ref": "#/components/schemas/state"
              },
              "ad-blocking": {
                "$ref": "#/components/schemas/state"
              },
              "stream-relocation": {
                "$ref": "#/components/schemas/state"
              },
              "malware-phising": {
                "$ref": "#/components/schemas/state"
              }
            }
          },
          "settings": {
            "$ref": "#/components/schemas/Adapter-Settings"
          },
          "health": {
            "$ref": "#/components/schemas/Adapter-Diags"
          }
        }
      },
      "Adapters": {
        "type": "array",
        "maxItems": 10,
        "description": "An Array of Adapter Records.",
        "items": {
          "$ref": "#/components/schemas/Adapter"
        }
      },
      "adapter-services": {
        "type": "string",
        "enum": [
          "VPN",
          "AdBlocking",
          "StreamRelocation",
          "Malware"
        ],
        "example": "VPN",
        "description": "A service running on the adapter."
      },
      "adapter-state": {
        "type": "boolean",
        "nullable": true,
        "default": true,
        "description": "**true**=Enable the Service. **false**=Disable the Service.\n**null**=No Change"
      },
      "datausage": {
        "type": "integer",
        "format": "uint64",
        "minimum": 0,
        "maximum": 1000000000000000000,
        "description": "Data Usage in Bytes."
      },
      "url": {
        "type": "string",
        "format": "URL",
        "minLength": 1,
        "maxLength": 2000,
        "nullable": true,
        "pattern": "^(?:(?:https:\\/\\/)|(?:\\./))?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$",
        "description": "A URL, including relative references.  Will only accept https or\nrelative urls.",
        "example": "./relative.url"
      },
      "streams": {
        "type": "array",
        "maxItems": 1000,
        "description": "List of streaming services",
        "items": {
          "type": "object",
          "description": "Streaming Services",
          "required": [
            "id",
            "name",
            "countries",
            "portable"
          ],
          "additionalProperties": false,
          "properties": {
            "id": {
              "$ref": "#/components/schemas/uuid"
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[\\S ]+$",
              "description": "Name of the streaming service",
              "example": "Netflix"
            },
            "icon": {
              "$ref": "#/components/schemas/url"
            },
            "portable": {
              "type": "boolean",
              "description": "Is the service subscription able to be used in multiple countries?",
              "default": true
            },
            "countries": {
              "type": "object",
              "description": "List of all countries streaming service is available in.\n\n**proxy** countries may be used to proxy a stream to appear as if\nthe stream is being watched in that country.\n\n**non-proxy** are countries where the streaming service is\navailable but for which no proxy exists.  These can only be\nused if the Adapter is located in that country.",
              "additionalProperties": false,
              "properties": {
                "proxy": {
                  "type": "array",
                  "description": "List of countries which can be proxied.",
                  "maxItems": 256,
                  "items": {
                    "$ref": "#/components/schemas/iso3166-country"
                  }
                },
                "non-proxy": {
                  "type": "array",
                  "maxItems": 256,
                  "description": "List of countries which can not be proxied.",
                  "items": {
                    "$ref": "#/components/schemas/iso3166-country"
                  }
                }
              }
            }
          }
        }
      },
      "stream-setting": {
        "type": "object",
        "description": "Settings for an individual relocatable stream",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "If the stream relocation is enabled for this service or not."
          },
          "country": {
            "$ref": "#/components/schemas/iso3166-country"
          }
        }
      },
      "stream-settings": {
        "type": "object",
        "description": "Streaming Services Settings",
        "required": [
          "id"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "settings": {
            "type": "object",
            "description": "Settings for the service",
            "required": [
              "current"
            ],
            "additionalProperties": false,
            "properties": {
              "current": {
                "$ref": "#/components/schemas/stream-setting"
              },
              "pending": {
                "$ref": "#/components/schemas/stream-setting"
              }
            }
          }
        }
      },
      "streams-settings": {
        "type": "array",
        "maxItems": 1000,
        "description": "Settings for streaming services on an Adapter.",
        "items": {
          "$ref": "#/components/schemas/stream-settings"
        }
      },
      "profile-name": {
        "type": "string",
        "format": "text",
        "nullable": true,
        "description": "The name of the profile.",
        "minLength": 0,
        "maxLength": 64,
        "pattern": "^[\\w\\W]+$",
        "example": "Shared"
      },
      "DataUsage": {
        "description": "The aggregate monthly data usage of all devices connected to the profile.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tx": {
            "$ref": "#/components/schemas/datausage"
          },
          "rx": {
            "$ref": "#/components/schemas/datausage"
          }
        }
      },
      "time-of-day": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "maximum": 86399,
        "default": 0,
        "description": "An absolute time of the day in seconds, where 0 = midnight."
      },
      "time-delay": {
        "type": "integer",
        "format": "int32",
        "minimum": 0,
        "maximum": 86399,
        "default": 0,
        "description": "A time delay, where 0 = no delay."
      },
      "Bedtime": {
        "description": "A time setting which defines when a \"bedtime\" state on a profile occurs.\nIn the UI, bedtime is defined as a Start and End time, however we define\na bedtime in the system as a Start time, and a duration.  There can only\nbe ONE bedtime per day, but the duration may make the bedtime extend\nthe next day.  Nominally a disabled bedtime should be encoded as\nstart-time=0 and duration=0\n- **start-time**: The absolute time that bedtime starts.\n- **duration**: The delay from **start-time** until bedtime ends.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "start-time": {
            "$ref": "#/components/schemas/time-of-day"
          },
          "duration": {
            "$ref": "#/components/schemas/time-delay"
          }
        }
      },
      "Bedtimes": {
        "type": "array",
        "minItems": 7,
        "maxItems": 7,
        "description": "This is a list of bedtimes for the week.  The first element is always\nMONDAY. The second is TUESDAY, and so on, until SUNDAY (the seventh\nitem).  This will need to be displayed correctly depending on how the\nclient defines which day is the start of the week. MONDAY is not\ndefined as the start of the week, it is an arbitrary starting point for\nthis array only.",
        "items": {
          "$ref": "#/components/schemas/Bedtime"
        }
      },
      "ProfileSettings": {
        "description": "The settings for a profile.\n- **youtube-restricted**: If youtube is restricted or normal.\n- **safesearch**: If search engines are forced to return safe results.\n- **internet-pause**: Internet will be paused until this time passes. If\n  the value is negative, internet is paused indefinitely.\n- **bedtime**: A list of bedtimes, one for each day of a week.\n- **bedtime-delay**: A once off delay for the current days bedtime\nstart.  Note, this does not change bedtime end.  This will automatically\nbe reset back to zero when bedtime ends.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "youtube-restricted": {
            "type": "boolean",
            "default": false,
            "description": "If Youtube is restricted for all devices in this profile."
          },
          "safesearch": {
            "type": "boolean",
            "default": false,
            "description": "If search providers are forced to safe search."
          },
          "internet-pause": {
            "$ref": "#/components/schemas/epoch-timestamp"
          },
          "bedtime": {
            "$ref": "#/components/schemas/Bedtimes"
          },
          "bedtime-delay": {
            "$ref": "#/components/schemas/time-delay"
          }
        }
      },
      "Profile": {
        "description": "A device settings profile.  Profiles define common settings for all\nassociated devices.\n\n- **id**: The profiles unique id.\n- **adapter**: The unique id of the adapter the profile belongs to.\n- **name**: The descriptive name of the profile.\n- **icon**: An identifier for the icon.\n- **system**: Is this a system profile?  If so, can not be edited or\ndeleted.\n- **settings**: Current state of settings for the profile.",
        "type": "object",
        "required": [
          "id",
          "adapter",
          "name"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "adapter": {
            "$ref": "#/components/schemas/uuid"
          },
          "name": {
            "$ref": "#/components/schemas/profile-name"
          },
          "icon": {
            "$ref": "#/components/schemas/url"
          },
          "system": {
            "type": "boolean",
            "default": false,
            "description": "System profiles are fixed by the system.  They may not be modified,\nrenamed or deleted.  Devices may be freely associated with them."
          },
          "datausage": {
            "$ref": "#/components/schemas/DataUsage"
          },
          "settings": {
            "$ref": "#/components/schemas/ProfileSettings"
          }
        }
      },
      "Profiles": {
        "description": "An array of known profiles",
        "type": "array",
        "minItems": 1,
        "maxItems": 100,
        "items": {
          "$ref": "#/components/schemas/Profile"
        }
      },
      "device-name": {
        "type": "string",
        "format": "text",
        "nullable": true,
        "description": "The name of the device.",
        "minLength": 0,
        "maxLength": 64,
        "pattern": "^[\\w\\W]+$",
        "example": "Granpa's Nokia"
      },
      "DeviceIP": {
        "type": "object",
        "required": [
          "ip4"
        ],
        "additionalProperties": false,
        "properties": {
          "ip4": {
            "$ref": "#/components/schemas/ip4"
          },
          "ip6": {
            "$ref": "#/components/schemas/ip6"
          }
        }
      },
      "PauseSetting": {
        "type": "object",
        "additionalProperties": false,
        "description": "- **state**: if true the system is enabled persistently.\n- **pause**: if the time is greater than now, then regardless of the\n**state** the service is disabled, until the pause time elapses.  After\nwhich, the **state** reasserts itself.",
        "properties": {
          "state": {
            "type": "boolean",
            "default": false,
            "description": "**true** = ON.  **false** = Off"
          },
          "pause": {
            "$ref": "#/components/schemas/epoch-timestamp"
          }
        }
      },
      "DeviceConfig": {
        "type": "object",
        "required": [
          "vpn",
          "device-protection",
          "ad-blocking"
        ],
        "additionalProperties": false,
        "description": "- **vpn**: Enabled or Not, and Pause time.\n- **Ad-blocking**: Enabled or Not, and Pause time.\n- **device-protection**: Enabled or not.  IF Pause time is greater than\nnow, all internet for the device is blocked until pause time elapses.",
        "properties": {
          "vpn": {
            "$ref": "#/components/schemas/PauseSetting"
          },
          "ad-blocking": {
            "$ref": "#/components/schemas/PauseSetting"
          },
          "device-protection": {
            "$ref": "#/components/schemas/PauseSetting"
          }
        }
      },
      "DeviceUsageRecord": {
        "type": "object",
        "description": "- **timestamp**: The start of the period.\n- **tx**: Number of bytes sent by the device in the period.\n- **rx**: Number of bytes received by the device in the period.",
        "required": [
          "timestamp",
          "tx",
          "rx"
        ],
        "additionalProperties": false,
        "properties": {
          "timestamp": {
            "$ref": "#/components/schemas/epoch-timestamp"
          },
          "tx": {
            "$ref": "#/components/schemas/datausage"
          },
          "rx": {
            "$ref": "#/components/schemas/datausage"
          }
        }
      },
      "DeviceUsageSummary": {
        "type": "object",
        "description": "Holds a summary of the devices usage.\n- **hours24**: The last 24 hour agregated usage.\n- **week**: The last 7 days agregated usage.\n- **month**: The last 30 days agregated usage.\n- **quater**: The last 90 days agregated usage.\n\n**timestamp** in the device usage is the start of the period in question.",
        "additionalProperties": false,
        "properties": {
          "hours24": {
            "$ref": "#/components/schemas/DeviceUsageRecord"
          },
          "week": {
            "$ref": "#/components/schemas/DeviceUsageRecord"
          },
          "month": {
            "$ref": "#/components/schemas/DeviceUsageRecord"
          },
          "quater": {
            "$ref": "#/components/schemas/DeviceUsageRecord"
          }
        }
      },
      "Device": {
        "type": "object",
        "required": [
          "id",
          "adapter",
          "profile",
          "mac"
        ],
        "additionalProperties": false,
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uuid"
          },
          "adapter": {
            "$ref": "#/components/schemas/uuid"
          },
          "profile": {
            "$ref": "#/components/schemas/uuid"
          },
          "mac": {
            "$ref": "#/components/schemas/mac"
          },
          "name": {
            "$ref": "#/components/schemas/device-name"
          },
          "type": {
            "$ref": "#/components/schemas/device-name"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/device-name"
          },
          "given_name": {
            "$ref": "#/components/schemas/device-name"
          },
          "given_type": {
            "$ref": "#/components/schemas/device-name"
          },
          "given_manufacturer": {
            "$ref": "#/components/schemas/device-name"
          },
          "ip": {
            "$ref": "#/components/schemas/DeviceIP"
          },
          "online": {
            "type": "boolean",
            "default": true
          },
          "online_since": {
            "$ref": "#/components/schemas/epoch-timestamp"
          },
          "discovered": {
            "$ref": "#/components/schemas/epoch-timestamp"
          },
          "cfg": {
            "$ref": "#/components/schemas/DeviceConfig"
          },
          "pending-cfg": {
            "$ref": "#/components/schemas/DeviceConfig"
          },
          "usage": {
            "$ref": "#/components/schemas/DeviceUsageSummary"
          }
        },
        "example": {
          "id": "e22cfd99-44e5-4c93-8cad-3185c623cc25",
          "adapter": "cd73b915-89a4-4971-9d86-bce91786b12a",
          "profile": "66f7346a-48af-4614-bd7b-6c17093d75e3",
          "mac": "00-00-5E-DF-98-EB",
          "name": "Nokia N78",
          "type": "Smartphone",
          "manufacturer": "Nokia",
          "given_name": "Granpa's Nokia",
          "given_type": null,
          "given_manufacturer": null,
          "ip": {
            "ip4": "192.168.0.55",
            "ip6": "2001:db8:85a3::8a2e:370:7334"
          },
          "online": true,
          "online_since": 1587732975,
          "discovered": 1587732975,
          "cfg": {
            "vpn": {
              "state": false,
              "pause": 1587732975
            },
            "ad-blocking": {
              "state": false,
              "pause": 1587732975
            },
            "device-protection": {
              "state": false,
              "pause": 1587732975
            }
          },
          "usage": {
            "hours24": {
              "timestamp": 1587732975,
              "tx": 123450,
              "rx": 243512340
            },
            "week": {
              "timestamp": 1587732975,
              "tx": 1234504,
              "rx": 2435123406
            },
            "month": {
              "timestamp": 1587732975,
              "tx": 12345047,
              "rx": 24351234068
            },
            "quater": {
              "timestamp": 1587732975,
              "tx": 123450472,
              "rx": 243512340683
            }
          }
        }
      },
      "Devices": {
        "description": "An array of known devices",
        "type": "array",
        "minItems": 0,
        "maxItems": 512,
        "items": {
          "$ref": "#/components/schemas/Device"
        }
      },
      "DeviceUsageHistory": {
        "type": "array",
        "description": "Holds up to 90 days worth of hourly data usage records for the device.\nThe resolution of the items (daily or hourly) depends on the api call.",
        "minItems": 1,
        "maxItems": 2160,
        "items": {
          "$ref": "#/components/schemas/DeviceUsageRecord"
        }
      }
    },
    "securitySchemes": {
      "clientToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Client Authorization Token, as generated by this API.\n- See the **Account Management** section for details."
      },
      "appKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "Application Unique API Key.\n\n- This key is distributed to authorized app developers and uniquely\nidentifies the application.\n- API Keys **MUST NOT** be shared between end user applications.\n- Each end user application **MUST** use a unique key.\n- The **X-API-KEY** token **MUST** only be included in messages which\nrequire it.\n- If it is included in any other message, that message **WILL** fail to authenticate."
      }
    },
    "responses": {
      "401": {
        "description": "The Clients Bearer Token is invalid or not recognized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Invalid Credentials."
            }
          }
        },
        "headers": {
          "WWW-Authenticate": {
            "schema": {
              "type": "string",
              "enum": [
                "Bearer realm=api2.privacyhero.com"
              ],
              "default": "Bearer realm=api2.privacyhero.com",
              "example": "Bearer realm=api2.privacyhero.com",
              "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
            }
          }
        }
      },
      "403": {
        "description": "Invalid Client Token, could not authorize api access.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GW_NegAuth"
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Not Found"
            }
          }
        }
      },
      "415": {
        "description": "Unsupported Media Type",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Unsupported Media Type"
            }
          }
        }
      },
      "429": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Too many requests"
            }
          }
        }
      },
      "500": {
        "description": "An Internal server error occurred.  Operation failed.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GW_InternalError"
            }
          }
        }
      },
      "401-appKey": {
        "description": "The appKey API Key is not recognized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Invalid API Key."
            }
          }
        },
        "headers": {
          "WWW-Authenticate": {
            "schema": {
              "type": "string",
              "enum": [
                "X-API-KEY realm=api2.privacyhero.com"
              ],
              "default": "X-API-KEY realm=api2.privacyhero.com",
              "example": "X-API-KEY realm=api2.privacyhero.com",
              "description": "Indicates that the applications API Key was not authorized to\naccess this API."
            }
          }
        }
      },
      "403-appKey": {
        "description": "The appKey API Key does not have authority to access the API.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GW_NegAuth"
            }
          }
        }
      },
      "default": {
        "description": "Unspecified Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Nack"
            },
            "example": {
              "error": "Unspecified Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "clientToken": []
    }
  ],
  "tags": [
    {
      "name": "Account Management",
      "description": "Operations related to Account Creation and Management"
    },
    {
      "name": "Client Management",
      "description": "Operations related to the Client"
    },
    {
      "name": "Adapter Management",
      "description": "Operations related to Adapter Management"
    },
    {
      "name": "Profile Management",
      "description": "Operations related to Profile Management"
    },
    {
      "name": "Device Management",
      "description": "Operations related to Device Management"
    },
    {
      "name": "Streaming Relocation Management",
      "description": "Operations related to Streaming Services and Relocation"
    }
  ],
  "paths": {
    "/v1/auth/newcustomer": {
      "post": {
        "operationId": "authNewCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Request New Customer/Forgotten Password",
        "description": "# Usage\n\nIf the email address supplied in the message is not registered in the\nsystem, then this message is processed as a \"New Customer\nRegistration\". Overwise this messages is processed\nas an \"Existing Customer forgot password\" request.\n\nThe ONLY difference in the processing is the form of the email which is\nsent to the customer.  Either acknowledging their request for a new\naccount, OR acknowledging their request to change their password.\n\nUpon receipt of this message, an email will be sent to the supplied\nemail address.  It will contain instructions to click a provided link in\nthe message which will act as a callback to the initiating application.\n\nThe URL passed as the callback must be able to accept three parameter in\nthe url of the form:\n```\ncallback.url/path?verify=<token>&pw=<false/true>&exp=<time>\n```\n - **verify** is the verification token to be sent back to the API server by\nthe app on the **/v1/auth/confirmcustomer** call.\n - **pwd** specifies that an initial password must be prompted from the Client,\nand supplied to the API in the **/v1/auth/confirmcustomer** call.\n - **exp** specifies when the verification token will expire.  Any call to\n**/v1/auth/confirmcustomer**` after this time will fail.\n\n## Security Requirements\n  - **appKey** must be valid and present in the call.\n  - **clientToken** may be present, but is ignored.\n\n## Parameters\n  - **email**: The email address the customer wants the Account email to be\ndirected to.\n  - **callback**: The complete URL, minus parameters, which is embedded in the email sent\nto the customer to confirm their account creation. It must point to the\napp which instigated this request.\n\n## Message Flow Diagrams\n\n  - See: [New Customer Message Flow](./API/flows/NewCustomer-Flow.html)\n  - See: [Forgot Password Message Flow](./API/flows/ForgotPassword-Flow.html)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "callback"
                ],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "$ref": "#/components/schemas/email-address"
                  },
                  "callback": {
                    "$ref": "#/components/schemas/url-callback"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and an email was sent to the\nusers provided email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Email sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-appKey"
          },
          "403": {
            "$ref": "#/components/responses/403-appKey"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/callback/path": {
      "get": {
        "operationId": "appCallback",
        "tags": [
          "Account Management"
        ],
        "summary": "Callback to App that requested a New Customer.",
        "description": "# Usage\nThis is the format of the callback that will be presented to the\ncustomer in their confirmation email.\n\nIt is linked to the instigating App, so that the App can continue\nthe process of creating the new account, resetting the password,\nre-establishing credentials, etc .\n\n## Security Requirements\n\nThere are no specific security requirements.  However the token is\ncryptographically signed, and only valid for the specified duration.\nThe application only needs to check the duration in the call, the API\nserver will verify the token remains valid and is properly formed when\nthe token is presented.\n\n## Parameters\n - **verify** is the verification token to be sent back to the API server by\n    the app on the **/v1/auth/confirmcustomer** call.\n - **pwd** specifies that a confirmation password must be prompted from\n    the Client, and supplied to the API in the **/v1/auth/confirmcustomer**\n    call.\n - **exp** specifies when the verification token will expire.  Any call\n    to **/v1/auth/confirmcustomer**` after this time will fail.",
        "servers": [
          {
            "url": "ph2app://android.app/some/path",
            "description": "The link which can open the app which called\n**v1//auth/newcustomer**, etc."
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "verify",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ph2-bearer-token"
            },
            "description": "The New Customer confirmation token.",
            "example": "AeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1MTYyMzkwMjJ9AB"
          },
          {
            "in": "query",
            "name": "exp",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/epoch-timestamp"
            },
            "description": "The Time, after which the verification token will become invalid.",
            "example": 1587759975
          },
          {
            "in": "query",
            "name": "pwd",
            "schema": {
              "type": "boolean",
              "default": true,
              "example": false
            },
            "description": "If true, the user must be prompted to create a password and the\npassword must be sent in the `confirmcustomer` API call.\nIf it is not present, it defaults to `true`"
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "The message was accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          },
          "400": {
            "description": "The token expired before the link was used.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/confirmcustomer": {
      "post": {
        "operationId": "confirmCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Confirm the Customer Account Maintenance Request",
        "description": "# Usage\nConfirms creation of the new account for a Customer, via the back link\nprovided by the email to the customer.\n\n## Security Requirements\n  - **appKey** must be valid and present in the call.\n  - **clientToken** may be present, but is ignored.\n\n## Parameters\n  - **verify**: The token passed to the callback which invoked this API\n  call.\n  - **pwd**: The clients chosen password.  This should only be provided\n  if the callback specified that a password was required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "verify"
                ],
                "additionalProperties": false,
                "properties": {
                  "verify": {
                    "$ref": "#/components/schemas/ph2-bearer-token"
                  },
                  "pwd": {
                    "$ref": "#/components/schemas/password"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and the account has been created/modified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authorized"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-appKey"
          },
          "403": {
            "$ref": "#/components/responses/403-appKey"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "login",
        "tags": [
          "Account Management"
        ],
        "summary": "Log a Client in to their account.",
        "description": "# Usage\nLogs a client in to their account, by validating their credentials\nand returning a Bearer token for API access.\n\nMust have a valid appKey for the request to be processed.\n\nThis API call is only made for applications that use a password for\nauthorization validation.  Other applications need to do account\nrecovery if the access token is lost or expired.\n\n## Security Requirements\n  - **appKey** **MUST** be present in the call.\n  - **clientToken** **MAY** be present but is ignored.\n\n## Parameters\n  - **id**: The clients ID,  different clients will present different ID.\n    - Customer: Their email address\n    - Admin: Their email address\n    - Admin as Customer: \\<admin email\\>:\\<customer email\\>\n    - Router: MAC Address\n  - **pwd**: The shared secret used to identify the client.  Typically this\nis a password.  It is sent unencrypted/unhashed because the link is\nprotected from eaves dropping with https.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "id",
                  "pwd"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "email | admin-as-client | mac",
                    "pattern": "^.+$",
                    "minLength": 6,
                    "maxLength": 768,
                    "description": "One of the three valid login id formats."
                  },
                  "pwd": {
                    "$ref": "#/components/schemas/password"
                  }
                }
              },
              "examples": {
                "client": {
                  "value": {
                    "id": "client@email.com",
                    "pwd": "123456789"
                  },
                  "description": "An Example Client login"
                },
                "admin": {
                  "value": {
                    "id": "admin@privacyhero.com",
                    "pwd": "iNBi5tRE"
                  },
                  "description": "An Example Admin login"
                },
                "admin-as-client": {
                  "value": {
                    "id": "admin@privacyhero.com:client@email.com",
                    "pwd": "iNBi5tRE"
                  },
                  "description": "An Example Admin logging in as a client."
                },
                "adapter": {
                  "value": {
                    "id": "00-00-5E-DF-98-EB",
                    "pwd": "nfhggkjebkqw413basbkJHGlkgqfrg"
                  },
                  "description": "An Example of an adapter logging in."
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and the account has been logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authorized"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401-appKey"
          },
          "403": {
            "$ref": "#/components/responses/403-appKey"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/renew": {
      "get": {
        "operationId": "authRenew",
        "tags": [
          "Account Management"
        ],
        "summary": "Renew a Client Authorization Token.",
        "description": "# Usage\n\nWhen the Clients Authorization Token is about to (or already has)\nreached its renewal time.  This call is made to provide a new token for\ncontinued use of the API without requiring account recover.  If the\ntoken has finally expired, account recovery will be required to generate\na new fresh Token.\n\nCauses the Authorization token attached to the API call\nto be renewed, and a new token returned.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present and **NOT** expired.",
        "responses": {
          "200": {
            "description": "The message was accepted, and the token has been renewed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authorized"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/chgpwd": {
      "post": {
        "operationId": "changePassword",
        "tags": [
          "Account Management"
        ],
        "summary": "Change a Clients password.",
        "description": "# Usage\nCauses the Clients password to be changed.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **old**: The old password of the Client.  Must be Valid.\n  - **new**: The new password of the Client.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "old",
                  "new"
                ],
                "additionalProperties": false,
                "properties": {
                  "old": {
                    "$ref": "#/components/schemas/password"
                  },
                  "new": {
                    "$ref": "#/components/schemas/password"
                  }
                },
                "example": {
                  "old": "4n 0ld p455w0rd",
                  "new": "my n3w p455w0rd"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The password was changed OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Authorized"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Insecure Password\"` - Password failed security strength check.\n* `\"Old Password doesn't match\"` - Old Password failed security check.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/chgemail": {
      "post": {
        "operationId": "changeEmail",
        "tags": [
          "Account Management"
        ],
        "summary": "Change a Clients Email Address.",
        "description": "# Usage\n\nCauses the Clients Email Address to be changed.\nWill also cause an email to be sent to both the\nold email address, advising the client it is being changed.\nAND, to the new email address to confirm the address is valid.\n\nThe Confirmation Email contains the callback as an embedded link which\nwill call back into the initiating application.\n\nThe URL passed as the callback must be able to accept three parameter in\nthe url of the form:\n```\ncallback.url/path?verify=<token>&pw=<false/true>&exp=<time>\n```\n - **verify** is the verification token to be sent back to the API server by\n    the app on the **/v1/auth/confirmcustomer** call.\n - **pwd** specifies that a confirmation password must be prompted from\n    the Client, and supplied to the API in the **/v1/auth/confirmcustomer**\n    call.\n - **exp** specifies when the verification token will expire.  Any call\n    to **/v1/auth/confirmcustomer**` after this time will fail.\n\n## Security Requirements\n  - **appKey** **MUST** be valid and present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **email**: The new email address to change to.\n  - **callback**: The complete URL, minus parameters, which is embedded in\n  the email sent to the customer to confirm their account creation. It\n  must point to the app which instigated this request.",
        "security": [
          {
            "clientToken": [],
            "appKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "callback"
                ],
                "additionalProperties": false,
                "properties": {
                  "email": {
                    "$ref": "#/components/schemas/email-address"
                  },
                  "callback": {
                    "$ref": "#/components/schemas/url-callback"
                  }
                }
              },
              "example": {
                "email": "newemail@email.org",
                "callback": "https://www.myapp.url/callback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email change was initiated.  Confirmation Emails sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Emails sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "The Email address is already in use by another Client.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Email address already used by another account."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/auth/delcustomer": {
      "post": {
        "operationId": "deleteCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Delete a Customer Account.",
        "description": "# Usage\nCauses an email to be sent to the customer requiring them\nto confirm they wish to mark the account for deletion.\n\nThe Email contains the callback as an embedded link which\nwill call back into the initiating application.\n\nThe URL passed as the callback must be able to accept three parameter in\nthe url of the form:\n```\ncallback.url/path?verify=<token>&pw=<false/true>&exp=<time>\n```\n - **verify** is the verification token to be sent back to the API server by\n    the app on the **/v1/auth/confirmcustomer** call.\n - **pwd** specifies that a confirmation password must be prompted from\n    the Client, and supplied to the API in the **/v1/auth/confirmcustomer**\n    call.\n - **exp** specifies when the verification token will expire.  Any call\n    to **/v1/auth/confirmcustomer**` after this time will fail.\n\n## Security Requirements\n  - **appKey** **MUST** be valid and present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.",
        "security": [
          {
            "clientToken": [],
            "appKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "callback"
                ],
                "additionalProperties": false,
                "properties": {
                  "callback": {
                    "$ref": "#/components/schemas/url-callback"
                  }
                },
                "example": {
                  "callback": "https://www.myapp.url/callback"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmation Email sent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Email sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/client/notify": {
      "post": {
        "operationId": "clientNotify",
        "tags": [
          "Client Management"
        ],
        "summary": "Subscribe/Unsubscribe to notifications.",
        "description": "# Usage\nAllows the client to subscribe/unsubscribe web push notifications.\n\nPush notifications require the client to authorize the subscription.\nThe App is responsible for getting the clients authority with the\nrelevant service, and then passing the WebPush Client Token (AKA\n\"Registration Id\") to the Backend API.  Anytime the WebPush Client Token\nis renewed by the Client, this same call is made to update it.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **token**: the WebPush Client Token obtained when the client\n  consented to receiving notifications.\n  - **service**: the WebPush Service being employed by the clients\n  application.\n    - **\"FIREBASE\"** is used for Android and non-safari web push\n    notifications.\n    - **\"APNS-IOS\"** is used for IOS Apps.\n    - **\"APNS-WEB\"** is used for Safari Web Push notifications.\n  - **cancel**: Optional.  Set to True, to cancel notifications for the service.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "service"
                ],
                "additionalProperties": false,
                "properties": {
                  "token": {
                    "type": "string",
                    "format": "WebPush Client Token",
                    "pattern": "^[\\w]+$",
                    "minLength": 8,
                    "maxLength": 256,
                    "example": "124FDSDGSDFG23452345FGsrfgsdf235",
                    "description": "The clients notification token for their service.  Also known as the\n\"Registration Id\"."
                  },
                  "service": {
                    "type": "string",
                    "format": "Notification",
                    "enum": [
                      "FIREBASE",
                      "APNS-IOS",
                      "APNS-WEB"
                    ],
                    "example": "FIREBASE",
                    "description": "The service the client token relates to."
                  },
                  "cancel": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "IF true, the notifications attached to this token are canceled."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Notification set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Notification Registered OK."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Invalid Service\"` - Password failed security strength check.\n* `\"Invalid WebPush Token\"` - Token is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/find": {
      "get": {
        "operationId": "adapterFind",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Find Unassociated adapters we can bind the client account to.",
        "description": "# Usage\nWhen an adapter is first installed, it is not linked to an account.\nThe client must add the adapter to their account, this function will\nreturn a list of adapters which are available to be associated.\n\nIt will either find all adapters on the same local network as the client\nconnection.  Or if that does not work, an adapter with a specific\nactivation code.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **code**: This is the optional activation code.  If not set, the\n    function will look for all unassociated adapters that share the\n    internet connection of the client making the call.\n\n    However, IF that fails, this can be set to a known activation code\n    which will cause any adapter with the matching activation code which\n    is not currently associated with an account to be returned.\n    Typically this would be a single Adapter.  If no adapters are found,\n    a \"404\" response will be generated.",
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "code",
            "schema": {
              "$ref": "#/components/schemas/activation-code"
            },
            "description": "The optional adapters activation code."
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all unclaimed adapters.\n  - **id**: Unique ID for the adapter (used in other API calls to\n  reference this adapter.)\n  - **adapter**: Identifying information for the adapter.\n    - **mac**: Adapters hardware mac address\n    - **type**: The type of adapter hardware.\n    - **desc**: Long form description of the adapter hardware.\n  - **since**: This is the epoch time when the unassociated adapter\n  last connected with the backend.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter-Unassociated-Array"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/claim": {
      "post": {
        "operationId": "adapterClaim",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Claim the specified adapter for the clients account.",
        "description": "# Usage\n\nClaims the specified adapter and associates it with the clients account.\nThe Claim can only succeed if the Adapter is not associated with an\naccount.\n\nThis API Call may also be used to replace an existing adapter, by\nspecifying the existing adapters AdapterID.  In which case, the existing\nadapter will be unassociated from the clients account and the newly\nclaimed adapter will replace it in its entirety.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The id of the adapter the client wants to claim.\n  - **oldid**: Optional. Allows the claimed adapter t replace an\n  existing adapter on the clients account.  In this instance, the old\n  adapter becomes unassociated with any account, and the new adapter\n  takes over the configuration, discovered devices and profiles of the\n  old adapter.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "oldid": {
                    "$ref": "#/components/schemas/uuid"
                  }
                }
              },
              "examples": {
                "new": {
                  "value": {
                    "id": "d6faadd3-d339-4910-89b4-570ec9f72cb7"
                  },
                  "description": "Claiming a new adapter."
                },
                "replacement": {
                  "value": {
                    "id": "d6faadd3-d339-4910-89b4-570ec9f72cb7",
                    "oldid": "cd73b915-89a4-4971-9d86-bce91786b12a"
                  },
                  "description": "Replacing an existing adapter."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The claimed adapters details.\n\n- **AdapterID** - is the Unique ID of this Adapter.\n- **mac** - The Adapters mac address.\n- **ip** - list of ip addresses, either current, or last known.\n- **registered** - the time the adapter was first claimed by the\ncustomer.\n- **state** - the current state of the listed services.\n- **settings** - the current adapter level settings.\n- **health** - the last and best result from diagnostic tests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Insecure Password\"` - Password failed security strength check.\n* `\"Old Password doesn't match\"` - Old Password failed security check.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/list": {
      "get": {
        "operationId": "adapterList",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Lists one or all adapters associated with the clients account.",
        "description": "# Usage\nGenerates a list of adapters associated with the clients account.\nCan list a single adapter, or all adapters associated with the account.\nIn the case that a client has no adapters associated, this will be an\nempty list.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: Optional, the ID of the adapter, if only one adapters\n  information is being requested.  Only adapters associated with a\n  clients account can be returned with this call.  IF the id is valid,\n  but the adapter is not associated with this clients account, then that\n  is treated the same as the adapter ID being invalid.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to list.  IF not present, will return ALL Adapters\nassociated with the Clients account."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The adapters details.\n\n- **AdapterID** - is the Unique ID of this Adapter.\n- **mac** - The Adapters mac address.\n- **ip** - list of ip addresses, either current, or last known.\n- **registered** - the time the adapter was first claimed by the\ncustomer.\n- **state** - the current state of the listed services.\n- **settings** - the current adapter level settings.\n- **health** - the last and best result from diagnostic tests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapters"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg": {
      "get": {
        "operationId": "adapterCfgQuery",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Query the state of configuration for an adapter.",
        "description": "# Usage\nFor a particular Adapter, return the current and pending configuration.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The adapters ID.  Can only get config for adapters\n  associated with the calling clients account.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to Query."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, Adapter Query Result returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter-Settings"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg/service": {
      "post": {
        "operationId": "adapterCfgService",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Change the Adapter Service Configuration.",
        "description": "# Usage\nFor a particular Adapter, change its current service configuration.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The adapters ID.  Can only get config for adapters\n  associated with the calling clients account.\nChange the Adapter Configuration.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "service",
                  "state"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "service": {
                    "$ref": "#/components/schemas/adapter-services"
                  },
                  "state": {
                    "$ref": "#/components/schemas/adapter-state"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Adapter Config Change queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter-Settings"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Could not name the adapter!"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg/name": {
      "post": {
        "operationId": "adapterName",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Give an adapter a descriptive name.",
        "description": "# Usage\n\nAllows the descriptive name of the adapter to be set.  Typically used by\na UI to allow a client to give an adapter a more meaningful name like\n\"Rental Appt. 1\"",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "name": {
                    "$ref": "#/components/schemas/adapter-name"
                  }
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "name": "Home Office Adapter"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Adapter named.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Success, Adapter named."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg/locale": {
      "post": {
        "operationId": "adapterLocale",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Set Locale specific information for an adapter.",
        "description": "# Usage\n\nThis allows the country the adapter is in, and/or its timezone to be\nset.  Any setting will permanently over-ride the auto detected values.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n- **id**: The adapters ID.\n- **country**: The two character ISO3166 country identifier where the\nadapter resides.\n- **timezone**: The IANA timezone name where the adapter resides.\n\nNote: No check is made to ensure the adapters timezone and country\ncoincide, it is up to the User to ensure the settings are meaningful,\nand the UI to provide clear guidance.\n\nAt least one of **country** or **timezone** must be present, otherwise\nthe message is invalid.  If a setting is not present, it is not changed.\n It is valid for **country** and **timezone** to both be present\n simultaneously.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "country": {
                    "$ref": "#/components/schemas/iso3166-country"
                  },
                  "timezone": {
                    "$ref": "#/components/schemas/iana-timezone"
                  }
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "country": "US",
                  "timezone": "America/Chicago"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Adapter locale set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Success, Adapter locale set."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg/datacap": {
      "post": {
        "operationId": "adapterDataCap",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Set the datacap for a particular adapter.",
        "description": "# Usage\nSets the data caps for the identified adapter.  Data Cap is used to\ncheck if monthly usage will exceed the data cap for reporting and\nnotification purposes.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The Adapters ID to set the data cap for.\n  - **cap**: The datacap for the adapter.  This is an array.  No entries\n  means that no datacap has been sent.  A single entry means that the\n  datacap is combined over tx & rx.  Two entries specifies a datacap\n  that may be different in both tx & rx.  The first entry is tx, the\n  second is rx.",
        "requestBody": {
          "required": true,
          "description": "The DataCap settings to apply.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "cap"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "cap": {
                    "$ref": "#/components/schemas/datacaps"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Adapter datacap set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Success, Adapter datacap set."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/cfg/wifi": {
      "post": {
        "operationId": "adapterWiFi",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Set the WiFi settings for a particular adapter.",
        "description": "# Usage\nSets the Wifi settings for the 2.4Ghz and 5Ghz Network for an adapter.\nIf an adapter has multiple wifi radios, both radios will be set to the\nsame SSID, and password.  If the adapter has no radios, this command\nyields no results on the adapter.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The id of the adapter to configure.\n  - **wifi**: The wifi settings for the adapter. Any setting excluded or\n   set to **null** will not be changed.",
        "requestBody": {
          "required": true,
          "description": "\"The Wifi Settings to apply. Set to null anything that shouldn't change.\"",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "wifi"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "wifi": {
                    "$ref": "#/components/schemas/wifi-settings"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, WiFi settings set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Success, WiFi settings set."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Could not name the adapter!"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/health": {
      "get": {
        "operationId": "adapterDiagQuery",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Query the result of adapter diagnostics.",
        "description": "# Usage\n\nWhen an adapter health diagnostic is running (or at any time) this api\ncall may be made to get the current status of any running tests. AND to\nget the historical diagnostic/health results.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The id of the adapter to retrieve diagnostic health status from.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to Query."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, Diagnostic Health Result returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter-Diags"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "operationId": "adapterDiagStart",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Start a diagnostic health check now.",
        "description": "# Usage\n\nThe system and adapters automatically run diagnostic health checks on a\ndaily basis, however, if the client wishes to force an adapter to run a\ndiagnostic health check now, this call can be made.\n\n## Parameters\n  - **id**: The id of the adapter to run the test on.  The Adapter must\n  be registered to the current client.\n  - **test**: The test to perform.\n    - \"**SpeedTest**\" will automatically pick the closest speedtest.com\n    server to the adapter and complete the speed test check.\n    - \"**BasicConnectivity**\" will cause a series of pings to be sent to\n         a wel known and reliable server.  The time taken to reply and\n         the number of replies which fail to be received will be recorded.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "test"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "test": {
                    "type": "string",
                    "enum": [
                      "SpeedTest",
                      "BasicConnectivity"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Current Diagnostic Health Result returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Adapter-Diags"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/adapter/datausage": {
      "get": {
        "operationId": "adapterDataUsage",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Get data usage statistics for an adapter.",
        "description": "# Usage\nGenerates a series of statistics for datausage of an adapter.\nMonthly, for the life of the adapter.\nDaily for the last 31 days.\nDaily Future Projection, for every day from today thru the end of the month.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: the ID of the adapter.  Only adapters associated with a\n  clients account can be returned with this call.  IF the id is valid,\n  but the adapter is not associated with this clients account, then that\n  is treated the same as the adapter ID being invalid.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to get data usage statistics for."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The adapters data usage statistics.\n\n- **monthly** - Data used each month, in reverse order from this\nmonth inclusive.\n- **daily** - Data used each day for the last 32 days, in reverse\norder from this day inclusive.\n- **projection** - The projected future daily usage, from today\nto last day of month (inclusive).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Settings for an individual wifi network",
                  "required": [
                    "monthly",
                    "daily",
                    "projection"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "monthly": {
                      "type": "object",
                      "description": "Monthly data usage statistics. Listed in reverse order,\nfor all months held.  ie, the first entry is the\nmonthly total for the current month.  The second entry is\nthe cumulative monthly total for last month, etc.",
                      "additionalProperties": false,
                      "properties": {
                        "tx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 256,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        },
                        "rx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 256,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        }
                      },
                      "example": {
                        "tx": [
                          320000,
                          1900000,
                          1850000,
                          1940000,
                          1890000
                        ],
                        "rx": [
                          1151000000,
                          3782000000,
                          3591000000,
                          4276000000,
                          3264000000
                        ]
                      }
                    },
                    "daily": {
                      "type": "object",
                      "description": "Daily data usage statistics. Listed in reverse order,\nfor the last 32 days.  ie, the first entry is the\ndaily total for today.  The second entry is\nthe cumulative daily total for yesterday, etc.",
                      "additionalProperties": false,
                      "properties": {
                        "tx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 32,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        },
                        "rx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 32,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        }
                      },
                      "example": {
                        "tx": [
                          2800,
                          80000,
                          60000,
                          40000,
                          20000
                        ],
                        "rx": [
                          15000000,
                          14000000,
                          13000000,
                          12000000,
                          11000000
                        ]
                      }
                    },
                    "projection": {
                      "type": "object",
                      "description": "Projected future total daily data usage statistics. Listed in\norder, for everyday from today to the last day of the\nmonth, inclusive.",
                      "additionalProperties": false,
                      "properties": {
                        "tx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 31,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        },
                        "rx": {
                          "type": "array",
                          "minItems": 1,
                          "maxItems": 31,
                          "items": {
                            "$ref": "#/components/schemas/datausage"
                          }
                        }
                      },
                      "example": {
                        "tx": [
                          120000,
                          160000,
                          200000,
                          240000,
                          280000
                        ],
                        "rx": [
                          15000000,
                          16000000,
                          17000000,
                          18000000,
                          19000000
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/streaming/services": {
      "get": {
        "operationId": "streamingServices",
        "tags": [
          "Streaming Relocation Management"
        ],
        "summary": "Lists streaming services, either ALL, or according to classification.",
        "description": "# Usage\n\nGenerates a list of streaming services currently supported by the\nsystem. The List is used to choose the streaming services to be set by\nthe **/v1/streaming/cfg** api call.\n\nThe call may return all services, or only Portable or Non-Portable\nservices, as required.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **type**: The types of services to return, options are All,\n Portable and non-portable.\n\nA **Portable** Service is one where the one subscription may be used\nin multiple countries.  A client may use relocation to view any\navailable stream where a proxy exists, or the stream from their current\nlocation, even if no proxy exists for it.\n\nA **Non-Portable** Service is region locked to the subscription.\nFor example, a US Non-Portable Service can only view US content, and\ncan not be relocated to view UK content.  For example, Relocation on these accounts\nallows a client with a US account, to view that content while in the UK.\nIt will not allow a client with a US account to view content on the UK\nversion of the service.",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "enum": [
                "All",
                "Portable",
                "Non-Portable"
              ],
              "default": "All"
            },
            "example": "All",
            "description": "The filter to apply to the service list, the list can contain ALL\nservices, or only Portable or Non-Portable services.\nIf the parameter is missing the call will return ALL services."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The streaming service list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/streams"
                },
                "example": [
                  {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "name": "Netflix",
                    "icon": "netflix.ico",
                    "portable": true,
                    "countries": {
                      "proxy": [
                        "US",
                        "GB",
                        "AU",
                        "TH"
                      ],
                      "non-proxy": [
                        "IL",
                        "ID"
                      ]
                    }
                  },
                  {
                    "id": "29a16e31-bb4d-4407-8244-8e68b820b854",
                    "name": "Disney+",
                    "icon": "disneyplus.ico",
                    "portable": false,
                    "countries": {
                      "proxy": [
                        "US",
                        "GB",
                        "IL"
                      ],
                      "non-proxy": [
                        "TH",
                        "ID"
                      ]
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/streaming/cfg": {
      "get": {
        "operationId": "streamingCfgQuery",
        "tags": [
          "Streaming Relocation Management"
        ],
        "summary": "Query the streaming cfg for an adapter.",
        "description": "# Usage\nFor a particular Adapter, query its streaming configuration.  This call\nwill reflect the current applied configuration and any pending but\nunconfirmed configuration changes.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The id of the adapter to retrieve the current streaming\n  configuration for.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to query."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, Streaming Service Configuration Returned.  This is an array\nof all streaming services, and their current configuration on the\nadapter.\n\n- **id**: the id of the streaming service\n- **settings.current**: The current setting.\n- **settings.pending**: The pending setting, not yet confirmed.\n- **enabled**: if relocation is enabled for this service.\n- **country**: the country the streaming service is directed from.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/streams-settings"
                },
                "example": [
                  {
                    "id": "29a16e31-bb4d-4407-8244-8e68b820b854",
                    "settings": {
                      "current": {
                        "enabled": true,
                        "country": "US"
                      },
                      "pending": {
                        "country": "JP"
                      }
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      },
      "post": {
        "operationId": "streamingCfgSet",
        "tags": [
          "Streaming Relocation Management"
        ],
        "summary": "Set the streaming cfg for an adapter.",
        "description": "# Usage\nFor a particular Adapter, set its streaming configuration.  Until the\nsettings are confirmed applied by the adapter, they will be reported as\npending.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and\n  valid.\n\n## Parameters\n  - **id**: The id of the adapter to set the pending streaming\n  configuration for.\n  - **cfg**: The configuration to set.  If this is not present, then no\n  configuration will change, and the call will simply return the\n  requested stream id's current and pending settings.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "example": "cd73b915-89a4-4971-9d86-bce91786b12a",
            "description": "The Adapter ID to set."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "cfg": {
                    "$ref": "#/components/schemas/stream-setting"
                  }
                },
                "example": {
                  "id": "29a16e31-bb4d-4407-8244-8e68b820b854",
                  "cfg": {
                    "enabled": true,
                    "country": "GB"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, Streaming Service Configuration Queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/stream-settings"
                },
                "example": {
                  "id": "29a16e31-bb4d-4407-8244-8e68b820b854",
                  "settings": {
                    "current": {
                      "enabled": true,
                      "country": "US"
                    },
                    "pending": {
                      "country": "GB"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/list": {
      "get": {
        "operationId": "profileList",
        "tags": [
          "Profile Management"
        ],
        "summary": "Lists all/selected profiles created by the client on their account.",
        "description": "# Usage\n\nGenerates a list of specific profile, or all profiles associated with\nthe clients account.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: Optional. The id of an adapter or profile.  If an adapter id\n  is provided, all profiles belonging to that adapter will be reported.\n  If a specific profile id is provided, that specific profile will be\n  reported, otherwise all profiles on all adapters will be reported.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "description": "The unique id of either an adapter or a profile."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The profile details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profiles"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/create": {
      "post": {
        "operationId": "profileCreate",
        "tags": [
          "Profile Management"
        ],
        "summary": "Create a new user profile.",
        "description": "# Usage\n\nCreates a new profile for the client.  Initially the profile will have\ndefault settings and no devices, the only thing set in creation is the\nprofile name (which must be unique to the client) and its icon.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the adapter we are associating the new\n  profile with. Must not be the same as any existing profile on that\n  adapter, or a reserved profile name.\n  - **name**: The name of the new profile.  Must not be the same as any\n  existing profile, or a reserved profile name.\n  - **icon**: Optionally, a link to the icon to use for the profile.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "name": {
                    "$ref": "#/components/schemas/profile-name"
                  },
                  "icon": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "example": {
                  "id": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Kids",
                  "icon": "butterfly.ico"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profile was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "adapter": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Kids",
                  "icon": "butterfly.ico",
                  "datausage": {
                    "tx": 0,
                    "rx": 0
                  },
                  "settings": {
                    "youtube-restricted": false,
                    "safesearch": false,
                    "internet-pause": null,
                    "bedtime": [
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      }
                    ],
                    "bedtime-delay": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Profile Name not unique.\"` - The Profile Name is not unique.\n* `\"Profile Name reserved.\"` - The Profile Name is reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/delete": {
      "post": {
        "operationId": "profileDelete",
        "tags": [
          "Profile Management"
        ],
        "summary": "Delete a new user profile.",
        "description": "# Usage\n\ndeletes an existing profile for the client.  Any devices which remain\nattached to the profile will be moved to the system \"shared\" profile.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.  The profile must belong to\n  the client account deleting it.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profile was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "Profile Deleted OK."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Cannot delete system profile.\"` - It is not possible to delete\nsystem profiles.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/cfg/name": {
      "post": {
        "operationId": "profileCfgName",
        "tags": [
          "Profile Management"
        ],
        "summary": "Change Name and/or Icon of a Profile.",
        "description": "# Usage\n\nAllows the descriptive name or icon of a profile to be changed.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.\n  - **name**: Optionally, The name of the new profile.  Must not be the same as any\n  existing profile, or a reserved profile name.\n  - **icon**: Optionally, a link to the icon to use for the profile.\n\nThe call may change either or both the **name** and **icon**.  If the\ncall is made, and neither **name** or **icon** is present, it is an error.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "name": {
                    "$ref": "#/components/schemas/profile-name"
                  },
                  "icon": {
                    "$ref": "#/components/schemas/url"
                  }
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "name": "Rugrats",
                  "icon": "rugrats.ico"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profile was renamed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "adapter": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Rugrats",
                  "icon": "rugrats.ico",
                  "datausage": {
                    "tx": 1234567,
                    "rx": 1234613450
                  },
                  "settings": {
                    "youtube-restricted": false,
                    "safesearch": false,
                    "internet-pause": null,
                    "bedtime": [
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      },
                      {
                        "start-time": 0,
                        "duration": 0
                      }
                    ],
                    "bedtime-delay": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Profile Name not unique.\"` - The Profile Name is not unique.\n* `\"Profile Name reserved.\"` - The Profile Name is reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/cfg/bedtimes": {
      "post": {
        "operationId": "profileCfgBedtimes",
        "tags": [
          "Profile Management"
        ],
        "summary": "Set the weekly bedtimes for a profile.",
        "description": "# Usage\n\nAllows the weekly bedtimes to be set for a profile.  The entire weekly\nschedule is always set, if some entries do not change, simply send them\nas configured.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.\n  - **bedtime**: An array of bedtimes to set for the profile.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "bedtime"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "bedtime": {
                    "$ref": "#/components/schemas/Bedtimes"
                  }
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "bedtime": [
                    {
                      "start-time": 77400,
                      "duration": 37800
                    },
                    {
                      "start-time": 77400,
                      "duration": 37800
                    },
                    {
                      "start-time": 77400,
                      "duration": 37800
                    },
                    {
                      "start-time": 77400,
                      "duration": 37800
                    },
                    {
                      "start-time": 77400,
                      "duration": 37800
                    },
                    {
                      "start-time": 82800,
                      "duration": 25200
                    },
                    {
                      "start-time": 82800,
                      "duration": 25200
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profile bedtime settings were made.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "adapter": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Rugrats",
                  "icon": "rugrats.ico",
                  "datausage": {
                    "tx": 1234567,
                    "rx": 1234613450
                  },
                  "settings": {
                    "youtube-restricted": false,
                    "safesearch": false,
                    "internet-pause": null,
                    "bedtime": [
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      }
                    ],
                    "bedtime-delay": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Profile Name not unique.\"` - The Profile Name is not unique.\n* `\"Profile Name reserved.\"` - The Profile Name is reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/cfg/bedtime-delay": {
      "post": {
        "operationId": "profileCfgBedtimeDelay",
        "tags": [
          "Profile Management"
        ],
        "summary": "Set the weekly bedtimes for a profile.",
        "description": "# Usage\n\nAllows todays bedtime to be delayed by the amount of seconds specified.\nThe delay can not be set, such that it would extend beyond the end of\nthe bedtime period.  At the end of the bedtime period, the delay will be\nreset to zero.  It only operates once.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.\n  - **delay**: The number of seconds to delay bedtime for.  Set to zero\n  to disable a previously set delay.  Delay only delays the start of\n it does not delay the end.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "delay"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "delay": {
                    "$ref": "#/components/schemas/time-delay"
                  }
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "delay": 1800
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profile bedtime settings were made.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "adapter": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Rugrats",
                  "icon": "rugrats.ico",
                  "settings": {
                    "youtube-restricted": false,
                    "safesearch": false,
                    "internet-pause": null,
                    "bedtime": [
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      }
                    ],
                    "bedtime-delay": 1800
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Profile Name not unique.\"` - The Profile Name is not unique.\n* `\"Profile Name reserved.\"` - The Profile Name is reserved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/cfg/setting": {
      "post": {
        "operationId": "profileCfgSetting",
        "tags": [
          "Profile Management"
        ],
        "summary": "Change a Configuration Setting on a profile.",
        "description": "# Usage\n\nAllows all devices, associated to a profile, access to the internet to\nbe paused.  Either for a timed period, or indefinitely, or for\nsafesearch to be enforced, or youtube to be restricted, as required.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.\n  - **restrict-youtube**: True, youtube is restricted.  False,\n  unrestricted.\n  - **safe-search**: True, search engine safe search enforced.  False,\n  unrestricted.\n  - **internet-paused**: The time when we \"unpause\" internet.  If this is in the\n  past, then by definition internet is enabled.  To pause indefinitely,\n  set to -1.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "restrict-youtube": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "safe-search": {
                    "type": "boolean",
                    "nullable": true,
                    "default": false
                  },
                  "internet-paused": {
                    "$ref": "#/components/schemas/epoch-timestamp"
                  }
                }
              },
              "examples": {
                "pause": {
                  "summary": "Pausing the internet",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "internet-paused": 1619533887
                  }
                },
                "restrict-youtube": {
                  "summary": "Restricting YouTube",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "restrict-youtube": true
                  }
                },
                "safesearch": {
                  "summary": "Setting Safe Search active",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "safesearch": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The profiles internet access is paused until the time set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "adapter": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "Rugrats",
                  "icon": "rugrats.ico",
                  "datausage": {
                    "tx": 1234567,
                    "rx": 1234613450
                  },
                  "settings": {
                    "youtube-restricted": true,
                    "safesearch": true,
                    "internet-pause": 1619533887,
                    "bedtime": [
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 77400,
                        "duration": 37800
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      },
                      {
                        "start-time": 82800,
                        "duration": 25200
                      }
                    ],
                    "bedtime-delay": 1800
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Pause time in the past.\"` - Can't pause into the past.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/profile/device": {
      "post": {
        "operationId": "profileDevice",
        "tags": [
          "Profile Management"
        ],
        "summary": "Make a configuration change to all devices connected to a profile.",
        "description": "# Usage\n\nAllows all devices to have certain configuration attributes globally\nset.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the profile.\n  - **setting**: The setting to set on all devices.\n  - **duration**: How long the setting lasts.  -1 is indefinite.\n\n  All parameters are required to be set.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "setting",
                  "duration"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "setting": {
                    "type": "string",
                    "enum": [
                      "VPNBypass",
                      "AdBlockingBypass",
                      "DeviceProtectionBypass"
                    ]
                  },
                  "duration": {
                    "$ref": "#/components/schemas/epoch-timestamp"
                  }
                }
              },
              "examples": {
                "VPN": {
                  "summary": "Indefinite VPN Bypass",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "setting": "VPNBypass",
                    "duration": -1
                  }
                },
                "AdBlocking": {
                  "summary": "Timed Ad-blocking Bypass",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "setting": "AdBlockingBypass",
                    "duration": 1619533887
                  }
                },
                "DeviceProtection": {
                  "summary": "Permanent Device Protection Bypass",
                  "value": {
                    "id": "cd73b915-89a4-4971-9d86-bce91786b12a",
                    "setting": "DeviceProtectionBypass",
                    "duration": -1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The setting has been applied to all associated devices.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                },
                "example": {
                  "msg": "VPN Bypass enabled on devices."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.\n* `\"Bypass time in the past.\"` - Can't bypass into the past.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/device/list": {
      "get": {
        "operationId": "deviceList",
        "tags": [
          "Device Management"
        ],
        "summary": "Lists all devices and their associated Adapter/Profile.",
        "description": "# Usage\n\nGenerates a list of either, all devices associated with the client, a\nspecific device, all devices on a profile, or all devices on an adapter.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: Optional. This can be either:\n    - The Unique ID of an Adapter: Will return all devices on that\n    adapter.\n    - The Unique ID of a Profile: Will return all devices attached to\n    that profile.\n    - The Unique ID of a device, will return that 1 device.\n    If no id is specified, all devices associated with the clients\n    account will be returned.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "description": "Either the unique id of a adapter, profile or device."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The device details, filtered as requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Devices"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/device/assign": {
      "post": {
        "operationId": "deviceAssign",
        "tags": [
          "Device Management"
        ],
        "summary": "Create a new user profile.",
        "description": "# Usage\n\nAssigns a device to a profile.  Can only assign devices to profiles that\nexist associated with the same adapter.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the device we are associating with the profile.\n  - **profile**: The unique id of the profile we are assigning the\n  device to.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "profile"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "profile": {
                    "$ref": "#/components/schemas/uuid"
                  }
                },
                "example": {
                  "id": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "profile": "66f7346a-48af-4614-bd7b-6c17093d75e3"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The device was assigned to the profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/device/usage": {
      "get": {
        "operationId": "deviceUsage",
        "tags": [
          "Device Management"
        ],
        "summary": "Get device data usage.",
        "description": "# Usage\n\nGenerates a list of data usage values for a device, at a specified resolution.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The Unique device ID.",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/uuid"
            },
            "description": "The unique device id."
          },
          {
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "Hourly",
                "Daily",
                "Weekly",
                "Monthly"
              ],
              "default": "Hourly"
            },
            "description": "The time resolution to report. Hourly is hourly, Daily is 24 hours.\nWeekly is 7 days and Monthly is 30 days.  If not specified the\nresolution is \"Hourly\""
          },
          {
            "in": "query",
            "name": "start",
            "schema": {
              "$ref": "#/components/schemas/epoch-timestamp"
            },
            "description": "The start of the reporting window.  If not specified, defaults to\nthe oldest data on record for the device."
          },
          {
            "in": "query",
            "name": "end",
            "schema": {
              "$ref": "#/components/schemas/epoch-timestamp"
            },
            "description": "The end of the reporting window.  If not specified, defaults to\nnow."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The device data usage is returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceUsageHistory"
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/device/name": {
      "post": {
        "operationId": "deviceName",
        "tags": [
          "Device Management"
        ],
        "summary": "Set one or more device name field over-rides to the clients choice.",
        "description": "# Usage\n\nAssigns a device to a profile.  Can only assign devices to profiles that\nexist associated with the same adapter.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the device we are associating with the profile.\n  - **name**: Optional, the name preferred by the client.\n  - **type**: Optional, the device type preferred by the client.\n  - **manufacturer**: Optional, the manufacturt preferred by the client.\n\n  The call may specify one or more name fields, name fields that are\n  present are set.  Ones that are not present are cleared and default\n  back to the system assigned names.  If a name needs to be changed and\n  the others remain, set all name fields.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "name": {
                    "$ref": "#/components/schemas/device-name"
                  },
                  "type": {
                    "$ref": "#/components/schemas/device-name"
                  },
                  "manufacturer": {
                    "$ref": "#/components/schemas/device-name"
                  }
                },
                "example": {
                  "id": "d46cb964-4a40-43ac-87f6-cdefa19fa121",
                  "name": "My Iphone",
                  "type": "Iphone 13",
                  "manufacturer": "Apple"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The device was assigned to the profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                },
                "example": {
                  "id": "e22cfd99-44e5-4c93-8cad-3185c623cc25",
                  "adapter": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "profile": "66f7346a-48af-4614-bd7b-6c17093d75e3",
                  "mac": "00-00-5E-DF-98-EB",
                  "name": "Unknown Iphone",
                  "type": "Unknown",
                  "manufacturer": "Unknown",
                  "given_name": "My Iphone",
                  "given_type": "Iphone 13",
                  "given_manufacturer": "Apple",
                  "ip": {
                    "ip4": "192.168.0.55",
                    "ip6": "2001:db8:85a3::8a2e:370:7334"
                  },
                  "online": true,
                  "online_since": 1587732975,
                  "discovered": 1587732975,
                  "cfg": {
                    "vpn": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "ad-blocking": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "device-protection": {
                      "state": false,
                      "pause": 1587732975
                    }
                  },
                  "usage": {
                    "hours24": {
                      "timestamp": 1587732975,
                      "tx": 123450,
                      "rx": 243512340
                    },
                    "week": {
                      "timestamp": 1587732975,
                      "tx": 1234504,
                      "rx": 2435123406
                    },
                    "month": {
                      "timestamp": 1587732975,
                      "tx": 12345047,
                      "rx": 24351234068
                    },
                    "quater": {
                      "timestamp": 1587732975,
                      "tx": 123450472,
                      "rx": 243512340683
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    },
    "/v1/device/setting": {
      "post": {
        "operationId": "deviceSetting",
        "tags": [
          "Device Management"
        ],
        "summary": "Set device setting.",
        "description": "# Usage\n\nSets the state of a particular device setting.\n\n## Security Requirements\n  - **appKey** **MUST NOT** be present in the call.\n  - **clientToken** **MUST** be present, not in need of renewal and valid.\n\n## Parameters\n  - **id**: The unique id of the device.\n  - **service**: Optional, the name preferred by the client.\n  - **type**: Optional, the device type preferred by the client.\n  - **manufacturer**: Optional, the manufacturer preferred by the client.\n\n  The call may specify one or more name fields, name fields that are\n  present are set.  Ones that are not present are cleared and default\n  back to the system assigned names.  If a name needs to be changed and\n  the others remain, set all name fields.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "service"
                ],
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/uuid"
                  },
                  "service": {
                    "type": "string",
                    "enum": [
                      "VPN",
                      "AdBlocking",
                      "DeviceProtection"
                    ]
                  },
                  "setting": {
                    "$ref": "#/components/schemas/PauseSetting"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success, The device config change was queued.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                },
                "example": {
                  "id": "e22cfd99-44e5-4c93-8cad-3185c623cc25",
                  "adapter": "cd73b915-89a4-4971-9d86-bce91786b12a",
                  "profile": "66f7346a-48af-4614-bd7b-6c17093d75e3",
                  "mac": "00-00-5E-DF-98-EB",
                  "name": "Unknown Iphone",
                  "type": "Unknown",
                  "manufacturer": "Unknown",
                  "given_name": "My Iphone",
                  "given_type": "Iphone 13",
                  "given_manufacturer": "Apple",
                  "ip": {
                    "ip4": "192.168.0.55",
                    "ip6": "2001:db8:85a3::8a2e:370:7334"
                  },
                  "online": true,
                  "online_since": 1587732975,
                  "discovered": 1587732975,
                  "cfg": {
                    "vpn": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "ad-blocking": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "device-protection": {
                      "state": true,
                      "pause": 1587732975
                    }
                  },
                  "pending-cfg": {
                    "vpn": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "ad-blocking": {
                      "state": false,
                      "pause": 1587732975
                    },
                    "device-protection": {
                      "state": false,
                      "pause": 1587732975
                    }
                  },
                  "usage": {
                    "hours24": {
                      "timestamp": 1587732975,
                      "tx": 123450,
                      "rx": 243512340
                    },
                    "week": {
                      "timestamp": 1587732975,
                      "tx": 1234504,
                      "rx": 2435123406
                    },
                    "month": {
                      "timestamp": 1587732975,
                      "tx": 12345047,
                      "rx": 24351234068
                    },
                    "quater": {
                      "timestamp": 1587732975,
                      "tx": 123450472,
                      "rx": 243512340683
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body\nError.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Nack"
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "415": {
            "$ref": "#/components/responses/415"
          },
          "429": {
            "$ref": "#/components/responses/429"
          },
          "500": {
            "$ref": "#/components/responses/500"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    }
  }
}