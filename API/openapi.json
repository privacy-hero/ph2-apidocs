{
  "openapi": "3.0.2",
  "info": {
    "title": "Privacy Hero 2 - Mothership API",
    "version": "0.0.6",
    "description": "The complete backend API for the Privacy Hero 2.\n\nThe backend server infrastructure is known as the *\"Mothership\"*\n\nThis API Documentation may be viewed at:\n  - **[PrivacyHero2 API - RapiDoc/Pdf](https://privacy-hero.github.io/ph2-apidocs/)**\n  - [PrivacyHero2 API - Swagger UI](https://privacy-hero.github.io/ph2-apidocs/index-swui.html)\n  - [PrivacyHero2 API - Redocly](https://privacy-hero.github.io/ph2-apidocs/index-redocly.html)\n  - [Download API JSON](https://privacy-hero.github.io/ph2-apidocs/API/PHMothership.openapi.yml)",
    "license": {
      "name": "Copyright Â© 2020 HelpOn Inc. All Rights Reserved",
      "url": "./LICENSE.md"
    },
    "contact": {
      "name": "API Support",
      "url": "http://www.example.com/support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "https://api2.privacyhero.com/{stage}",
      "description": "The API deployment URL.",
      "variables": {
        "stage": {
          "enum": [
            "dev",
            "qa",
            "prod"
          ],
          "default": "prod",
          "description": "Deployment Stages"
        }
      }
    },
    {
      "url": "https://{awsid}.execute-api.us-east-1.amazonaws.com/dev",
      "description": "Development URL",
      "variables": {
        "awsid": {
          "default": "999999",
          "description": "The ID for your dev AWS deployment"
        }
      }
    }
  ],
  "components": {
    "schemas": {},
    "securitySchemes": {
      "clientToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Custom",
        "description": "Client Auth Token as generated by this API"
      },
      "appKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "Application Unique API Key, as distributed to the APP Developers. Each app\nhas a unique API Key.  It only needs to be included in messages that\nrequire it."
      }
    }
  },
  "tags": [
    {
      "name": "Account Management",
      "description": "Operations related to Account Creation and Management"
    },
    {
      "name": "Adapter Management",
      "description": "Operations related to Adapter Management"
    },
    {
      "name": "Profile Management",
      "description": "Operations related to Profile Management"
    },
    {
      "name": "Device Management",
      "description": "Operations related to Device Management"
    }
  ],
  "paths": {
    "/v1/auth/newcustomer": {
      "post": {
        "operationId": "authNewCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Request New Customer/Forgotten Password",
        "description": "If the email address supplied in the message is not registered in the\nsystem.  Then this message is processed as a \"New Customer\nRegistration\".  IF the email does exist, then this messages is processed\nas a \"Existing Customer forgot password\".\n\nThe ONLY difference in the processing is the form of the email which is\nsent to the customer.  Either acknowledging their request for a new\naccount, OR acknowledging their request to change their password.\n\nUpon receipt of this message, an email will be sent to the supplied\nemail address.  It will contain instructions to click a provided link in\nthe message which will act as a callback to the initiating application.\n\nThe URL passed as the callback must be able to accept three parameter in\nthe url of the form:\n  - verify=\\<verification token\\>\n  - pw=false/true\n  - exp=\\<time>\\\n\n`verify` is the verification token to be sent back to the API server by\nthe app on the `confirmcustomer` call.\n\n`pw` specifies is an initial password must be prompted from the Client,\nand supplied to the API in the `confirmcustomer` call.\n\n`exp` specifies when the verification token will expire.  Any call to\n`confirmcustomer` after this time will fail.\n\nMust have a valid appToken for the request to be processed.",
        "externalDocs": {
          "url": "./API/flows/NewCustomer-Flow.html",
          "description": "New Customer Message Flow"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "callback"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address the customer wants the Account email to be\ndirected to."
                  },
                  "callback": {
                    "type": "string",
                    "format": "url",
                    "example": "https://www.myapp.url/callback",
                    "description": "The complete URL, minus parameters, which is embedded in the\nemail sent to the customer to confirm their account\ncreation. It must point to the app which instigated this\nrequest."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and an email was sent to the\nusers provided email address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "msg"
                  ],
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "OK."
                    }
                  }
                },
                "example": {
                  "msg": "Email sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.  Possible errors are:\n* `\"Internal Server Error.\"` - Fatal uncategorized error in server.\n* `\"Required Parameters missing or malformed.\"` - JSON Message Body Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Internal Server Error."
                }
              }
            }
          },
          "401": {
            "description": "The APP Key is invalid or not recognized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Invalid App Key."
                }
              }
            }
          },
          "403": {
            "description": "Invalid App Key, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/{callbackpath}": {
      "post": {
        "operationId": "appCallback",
        "tags": [
          "Account Management"
        ],
        "summary": "Callback to App that requested a New Customer.",
        "description": "This is the format of the callback that will be presented to the\ncustomer in their confirmation email.\n\nIt is linked to the instigating App, so that the App can continue\nthe process of creating the new account.",
        "servers": [
          {
            "url": "https://www.myapp.url/",
            "description": "The link which can open the app which called\n/auth/newcustomer.\n- exp=\\<time>\\"
          }
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "callbackpath",
            "schema": {
              "type": "string",
              "format": "path",
              "example": "callback"
            },
            "description": "Any path required by the application callback. The base URL and callback path are derived from the `callback` parameter from the `newcustomer` API Call."
          },
          {
            "in": "query",
            "name": "verify",
            "required": true,
            "schema": {
              "type": "string",
              "format": "token"
            },
            "description": "The New Customer confirmation token."
          },
          {
            "in": "query",
            "name": "exp",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "unix-time"
            },
            "description": "The Time, being the Epoch Time, after which the verification token will become invalid.\nEpoch Time is the number of seconds that have elapsed since the time 00:00:00 UTC on 1 January 1970, minus leap seconds"
          },
          {
            "in": "query",
            "name": "pw",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "description": "If true, the user must be prompted to create a password and the password must be sent in the `confirmcustomer` API call. If it is not present, it defaults to `true`"
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "The message was accepted."
          },
          "400": {
            "description": "The token expired before the link was used."
          }
        }
      }
    },
    "/v1/auth/confirmcustomer": {
      "post": {
        "operationId": "confirmCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Confirm the New Customer Request",
        "description": "Confirms creation of the new account for a Customer, from the back link\nprovided by the email to the customer.\n\nMust have a valid appToken for the request to be processed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "verify"
                ],
                "properties": {
                  "verify": {
                    "type": "string",
                    "format": "token",
                    "example": "jE1ODU4NDQxMjEsImp0aSI6InJhbmRvbS11bmlxdWUtc3RyaW5nIiwiaWF0IjoxNTg1ODQxMTIxLCJpc3MiOiJQcml2YWN5SGVybyIsInN1YiI6InN0ZXZlbiIsImlkdCI6IkMifQ.8AlZ8De6ldta_r7IS-hR_6Nr_u8fNGcwsoY9gz6M2sA",
                    "description": "The token from the callback which invoked this API call."
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and the account has been created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bearer",
                    "renew",
                    "exp"
                  ],
                  "properties": {
                    "bearer": {
                      "type": "string",
                      "example": "kjlfhgaklhgkalhgkladhjg.kasdfakjshaksdjhakldjf",
                      "description": "The Client Authorization Bearer token required to be sent in the\n`Authorization: Bearer` header of all API calls that are called on\nbehalf of the Client."
                    },
                    "renew": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which user access will expire with this token.\nRenew before this time, for uninterrupted access.  Renewal may occur\nup until `exp` time."
                    },
                    "exp": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which the token will completely expire and may\nnot be used for renewal.  After this time the user must\nre-authenticate to get a new bearer token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The Application authorization token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The `verify` token is either invalid or expired.  In either case, it\nis to be treated as if it simply expired.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Link Expired"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "login",
        "tags": [
          "Account Management"
        ],
        "summary": "Log a Client in to their account.",
        "description": "Logs a client in to their account, by validating their credentials\nand returning a Bearer token for API access.\n\nMust have a valid appToken for the request to be processed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "pwd"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "someone@somewhere.com",
                    "description": "The clients ID,  different clients will present different\nID.\n\n- Customer: Their email address\n- Admin: Their email address\n- Admin as Customer: \\<admin email\\>:\\<customer email\\>\n- Router: MAC Address"
                  },
                  "pwd": {
                    "type": "string",
                    "format": "password",
                    "description": "The shared secret used to identify the client.  Typically this is a password.  It is sent unencrypted/unhashed because the link is protected from eaves dropping with https."
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "appKey": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and the account has been logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bearer",
                    "renew",
                    "exp"
                  ],
                  "properties": {
                    "bearer": {
                      "type": "string",
                      "example": "kjlfhgaklhgkalhgkladhjg.kasdfakjshaksdjhakldjf",
                      "description": "The Client Authorization Bearer token required to be sent in the\n`Authorization: Bearer` header of all API calls that are called on\nbehalf of the Client."
                    },
                    "renew": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which user access will expire with this token.\nRenew before this time, for uninterrupted access.  Renewal may occur\nup until `exp` time."
                    },
                    "exp": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which the token will completely expire and may\nnot be used for renewal.  After this time the user must\nre-authenticate to get a new bearer token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The Application authorization token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The password or id is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Password Invalid"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/renew": {
      "get": {
        "operationId": "authRenew",
        "tags": [
          "Account Management"
        ],
        "summary": "Renew a Client Authorization Token.",
        "description": "Causes the Authorization token attached to the API call\nto be renewed, and a new token returned.",
        "security": [
          {
            "clientToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "The message was accepted, and the token has been renewed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bearer",
                    "renew",
                    "exp"
                  ],
                  "properties": {
                    "bearer": {
                      "type": "string",
                      "example": "kjlfhgaklhgkalhgkladhjg.kasdfakjshaksdjhakldjf",
                      "description": "The Client Authorization Bearer token required to be sent in the\n`Authorization: Bearer` header of all API calls that are called on\nbehalf of the Client."
                    },
                    "renew": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which user access will expire with this token.\nRenew before this time, for uninterrupted access.  Renewal may occur\nup until `exp` time."
                    },
                    "exp": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which the token will completely expire and may\nnot be used for renewal.  After this time the user must\nre-authenticate to get a new bearer token."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The Clients Bearer Token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The Clients Bearer token is valid, but its time to be renewed has\npassed.  The Client must be re-authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "API Token has expired."
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/chgpwd": {
      "post": {
        "operationId": "changePassword",
        "tags": [
          "Account Management"
        ],
        "summary": "Change a Clients password.",
        "description": "Causes the Clients password to be changed.",
        "security": [
          {
            "clientToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "old",
                  "new"
                ],
                "properties": {
                  "old": {
                    "type": "string",
                    "format": "password",
                    "description": "The old password of the Client."
                  },
                  "new": {
                    "type": "string",
                    "format": "password",
                    "description": "The new password of the Client."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The password was changed OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "bearer",
                    "renew",
                    "exp"
                  ],
                  "properties": {
                    "bearer": {
                      "type": "string",
                      "example": "kjlfhgaklhgkalhgkladhjg.kasdfakjshaksdjhakldjf",
                      "description": "The Client Authorization Bearer token required to be sent in the\n`Authorization: Bearer` header of all API calls that are called on\nbehalf of the Client."
                    },
                    "renew": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which user access will expire with this token.\nRenew before this time, for uninterrupted access.  Renewal may occur\nup until `exp` time."
                    },
                    "exp": {
                      "type": "integer",
                      "example": 234523454,
                      "description": "The Epoch Time, at which the token will completely expire and may\nnot be used for renewal.  After this time the user must\nre-authenticate to get a new bearer token."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The new password is not secure enough.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Password must contain at least One UpperCase character, One\nLowerCase character, One Number and be at least 8 characters\nlong."
                }
              }
            }
          },
          "401": {
            "description": "The Clients Bearer Token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The Clients Old Password does not match, can not change.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "OLD Password Invalid."
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/chgemail": {
      "post": {
        "operationId": "changeEmail",
        "tags": [
          "Account Management"
        ],
        "summary": "Change a Clients Email Address.",
        "description": "Causes the Clients Email Address to be changed.\nWill also cause an email to be sent to the both the\nold email address, advising the client it is being changed.\nAND, to the new email address to confirm the address is valid.",
        "security": [
          {
            "clientToken": [],
            "appKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "callback"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The NEW email address the customer wants to be the Accounts\nemail address."
                  },
                  "callback": {
                    "type": "string",
                    "format": "url",
                    "example": "https://www.myapp.url/callback",
                    "description": "The complete URL, minus parameters, which is embedded in the\nemail sent to the customer to confirm their account\ncreation. It must point to the app which instigated this\nrequest."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email change was initiated.  Confirmation Emails sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "msg"
                  ],
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "OK."
                    }
                  }
                },
                "example": {
                  "msg": "Emails sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "The Email address is already in use by another Client.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Email address already used by another account."
                }
              }
            }
          },
          "401": {
            "description": "The Clients Bearer Token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The App Token is invalid, can not change.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Application Token Invalid."
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/delcustomer": {
      "post": {
        "operationId": "deleteCustomer",
        "tags": [
          "Account Management"
        ],
        "summary": "Delete a Customer Account.",
        "description": "Causes an email to be sent to the customer requiring them\nto confirm they wish to mark the account for deletion.\n\nThe Email contains the callback as an embedded link which\nwill call back into the initiating application.",
        "security": [
          {
            "clientToken": [],
            "appKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The clients password, if they have one."
                  },
                  "callback": {
                    "type": "string",
                    "format": "url",
                    "example": "https://www.myapp.url/callback",
                    "description": "The complete URL, minus parameters, which is embedded in the\nemail sent to the customer to confirm their account\ncreation. It must point to the app which instigated this\nrequest."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Confirmation Email sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "msg"
                  ],
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "OK."
                    }
                  }
                },
                "example": {
                  "msg": "Email sent to user, OK."
                }
              }
            }
          },
          "400": {
            "description": "The Password supplied does not match the Customers known password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Invalid Password."
                }
              }
            }
          },
          "401": {
            "description": "The Clients Bearer Token is invalid or not recognized.",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string",
                  "example": "Bearer realm=privacyhero2.api.com",
                  "description": "indicates the authentication scheme(s) and parameters\napplicable to the target resource."
                }
              }
            }
          },
          "403": {
            "description": "The App Token is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Application Token Invalid."
                }
              }
            }
          }
        }
      }
    },
    "/v1/adapter/find": {
      "get": {
        "operationId": "adapterFind",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Find Unassociated adapters we can bind the client account to.",
        "description": "When an adapter is first installed, it is not linked to an account.\nThe client must add the adapter to their account, this function will\nreturn a list of adapters which are available to be associated.\n\nIt will either find all adapters on the same local network as the client\nconnection.  Or if that does not work, a list of all adapters which are\ncurrently unassociated and have the same two last digits of the MAC\naddress as optionally provided in this call.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "schema": {
              "type": "string"
            },
            "example": "A9",
            "description": "If not set, the function will look for all unassociated adapters\nthat share the internet connection of the client making the call.\n\nHowever, IF that fails, this can be set to the last two digits of\nthe MAC address, which will return a global list of all connected\nadapters which are not currently associated with an account, and\nshare the two last characters specified."
          }
        ],
        "responses": {
          "200": {
            "description": "The list of all unclaimed adapters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "adapters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "mac",
                          "desc"
                        ],
                        "properties": {
                          "mac": {
                            "type": "string",
                            "format": "MAC Address",
                            "example": "00-00-5E-78-9A-F0",
                            "description": "Adapters EUI-48 Formatted MAC Address"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Privacy Hero 2 - Router V1",
                            "description": "The description of the adapters hardware."
                          },
                          "name": {
                            "type": "string",
                            "example": "Main House Adapter",
                            "description": "The descriptive name the client has given the adapter",
                            "nullable": true
                          },
                          "since": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-04-12T23:20:50.52Z",
                            "description": "The last time this device came online."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Some Error."
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/adapter/claim": {
      "post": {
        "operationId": "adapterClaim",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Find Unassociated adapters we can bind the client account to.",
        "description": "Claims the specified adapter and associates it with the clients account.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "schema": {
              "type": "string"
            },
            "example": "00-00-5E-XX-XX-XX",
            "description": "The mac address of the adapter to associate with the account.\nMust not already be associated with another account."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The claimed adapters details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An Adapter/Router and all it's known devices.",
                  "type": "object",
                  "required": [
                    "mac",
                    "desc"
                  ],
                  "properties": {
                    "mac": {
                      "type": "string",
                      "format": "MAC Address",
                      "example": "00-00-5E-78-9A-F0",
                      "description": "Adapters EUI-48 Formatted MAC Address"
                    },
                    "desc": {
                      "type": "string",
                      "example": "Privacy Hero 2 - Router V1",
                      "description": "The description of the adapters hardware."
                    },
                    "name": {
                      "type": "string",
                      "example": "Main House Adapter",
                      "description": "The descriptive name the client has given the adapter",
                      "nullable": true
                    },
                    "devices": {
                      "description": "An array of known devices",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "mac",
                          "name",
                          "type"
                        ],
                        "properties": {
                          "mac": {
                            "type": "string",
                            "format": "MAC Address",
                            "example": "00-00-5E-32-5C-DE",
                            "description": "Devices EUI-48 Formatted MAC Address"
                          },
                          "name": {
                            "type": "string",
                            "example": "android-e960b7e925b22464",
                            "description": "The default name of the device"
                          },
                          "type": {
                            "type": "string",
                            "example": "Android Smart Phone",
                            "description": "Automatically detected device type, used as `desc` if desc is null."
                          },
                          "given_name": {
                            "type": "string",
                            "example": null,
                            "description": "If NOT null, this is the name the Client gave the device.",
                            "nullable": true
                          },
                          "desc": {
                            "type": "string",
                            "example": "Mums Samsung S12+",
                            "description": "If not null, the Name given to the device by the user.",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Could not claim the adapter!"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/adapter/name": {
      "post": {
        "operationId": "adapterName",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Give an adapter a descriptive name.",
        "description": "Provides a descriptive name to an adapter that helps identify it.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "schema": {
              "type": "string"
            },
            "example": "00-00-5E-XX-XX-XX",
            "description": "The mac address of the adapter to name."
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "example": "Home Office Adapter",
            "description": "The name to apply to the adapter."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, Adapter named."
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Could not claim the adapter!"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/adapter/list": {
      "get": {
        "operationId": "adapterList",
        "tags": [
          "Adapter Management"
        ],
        "summary": "Lists all adapters associated with the clients account.",
        "description": "Generates a list of all adapters associated with the clients account.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "devices",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true,
            "description": "If devices is not present, or false, then the response will just\nlist the known adapters.  If it is true, the list will include every\ndevice known to those adapters."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The claimed adapters details.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "mac",
                          "desc"
                        ],
                        "properties": {
                          "mac": {
                            "type": "string",
                            "format": "MAC Address",
                            "example": "00-00-5E-78-9A-F0",
                            "description": "Adapters EUI-48 Formatted MAC Address"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Privacy Hero 2 - Router V1",
                            "description": "The description of the adapters hardware."
                          },
                          "name": {
                            "type": "string",
                            "example": "Main House Adapter",
                            "description": "The descriptive name the client has given the adapter",
                            "nullable": true
                          },
                          "since": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-04-12T23:20:50.52Z",
                            "description": "The last time this device came online."
                          }
                        }
                      }
                    },
                    {
                      "description": "An array of adapters, and their devices.",
                      "type": "array",
                      "items": {
                        "description": "An Adapter/Router and all it's known devices.",
                        "type": "object",
                        "required": [
                          "mac",
                          "desc"
                        ],
                        "properties": {
                          "mac": {
                            "type": "string",
                            "format": "MAC Address",
                            "example": "00-00-5E-78-9A-F0",
                            "description": "Adapters EUI-48 Formatted MAC Address"
                          },
                          "desc": {
                            "type": "string",
                            "example": "Privacy Hero 2 - Router V1",
                            "description": "The description of the adapters hardware."
                          },
                          "name": {
                            "type": "string",
                            "example": "Main House Adapter",
                            "description": "The descriptive name the client has given the adapter",
                            "nullable": true
                          },
                          "devices": {
                            "description": "An array of known devices",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "mac",
                                "name",
                                "type"
                              ],
                              "properties": {
                                "mac": {
                                  "type": "string",
                                  "format": "MAC Address",
                                  "example": "00-00-5E-32-5C-DE",
                                  "description": "Devices EUI-48 Formatted MAC Address"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "android-e960b7e925b22464",
                                  "description": "The default name of the device"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "Android Smart Phone",
                                  "description": "Automatically detected device type, used as `desc` if desc is null."
                                },
                                "given_name": {
                                  "type": "string",
                                  "example": null,
                                  "description": "If NOT null, this is the name the Client gave the device.",
                                  "nullable": true
                                },
                                "desc": {
                                  "type": "string",
                                  "example": "Mums Samsung S12+",
                                  "description": "If not null, the Name given to the device by the user.",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Could not claim the adapter!"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/profile/list": {
      "get": {
        "operationId": "profileList",
        "tags": [
          "Profile Management"
        ],
        "summary": "Lists all/selected profiles created by the client on their account.",
        "description": "Generates a list of all profiles associated with the clients account.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            },
            "example": "shared",
            "description": "If specified, the profile list returned in the response will be\nrestricted to this single profile."
          },
          {
            "in": "query",
            "name": "devices",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true,
            "description": "If devices is not present, or false, then the response will just\nlist the known profiles.  If it is true, the list will include every\ndevice linked to the profiles."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The claimed adapters details.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "description": "An array of known profiles",
                      "type": "array",
                      "items": {
                        "description": "A device setting profile",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name given to the profile."
                          }
                        }
                      }
                    },
                    {
                      "description": "All profiles, and all devices in those profiles.",
                      "type": "array",
                      "items": {
                        "description": "A profiles, and the devices associated with it.",
                        "allOf": [
                          {
                            "description": "A device setting profile",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name given to the profile."
                              }
                            }
                          },
                          {
                            "description": "An array of known devices",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "mac",
                                "name",
                                "type"
                              ],
                              "properties": {
                                "mac": {
                                  "type": "string",
                                  "format": "MAC Address",
                                  "example": "00-00-5E-32-5C-DE",
                                  "description": "Devices EUI-48 Formatted MAC Address"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "android-e960b7e925b22464",
                                  "description": "The default name of the device"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "Android Smart Phone",
                                  "description": "Automatically detected device type, used as `desc` if desc is null."
                                },
                                "given_name": {
                                  "type": "string",
                                  "example": null,
                                  "description": "If NOT null, this is the name the Client gave the device.",
                                  "nullable": true
                                },
                                "desc": {
                                  "type": "string",
                                  "example": "Mums Samsung S12+",
                                  "description": "If not null, the Name given to the device by the user.",
                                  "nullable": true
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Could not claim the adapter!"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/device/list": {
      "get": {
        "operationId": "deviceList",
        "tags": [
          "Device Management"
        ],
        "summary": "Lists all devices and their associated Adapter/Profile.",
        "description": "Generates a list of all devices.\n\n**_EARLY DRAFT_**",
        "externalDocs": {
          "url": "./API/flows/AdapterAccountAssociation-Flow.html",
          "description": "Adapter/Account Association message flow diagram."
        },
        "security": [
          {
            "clientToken": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "00-00-5E-32-5C-DE",
            "description": "If specified will only return details of the listed device mac address."
          }
        ],
        "responses": {
          "200": {
            "description": "Success, The claimed adapters details.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "An array of known devices",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "mac",
                      "name",
                      "type"
                    ],
                    "properties": {
                      "mac": {
                        "type": "string",
                        "format": "MAC Address",
                        "example": "00-00-5E-32-5C-DE",
                        "description": "Devices EUI-48 Formatted MAC Address"
                      },
                      "name": {
                        "type": "string",
                        "example": "android-e960b7e925b22464",
                        "description": "The default name of the device"
                      },
                      "type": {
                        "type": "string",
                        "example": "Android Smart Phone",
                        "description": "Automatically detected device type, used as `desc` if desc is null."
                      },
                      "given_name": {
                        "type": "string",
                        "example": null,
                        "description": "If NOT null, this is the name the Client gave the device.",
                        "nullable": true
                      },
                      "desc": {
                        "type": "string",
                        "example": "Mums Samsung S12+",
                        "description": "If not null, the Name given to the device by the user.",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "General Request processing error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                },
                "example": {
                  "error": "Could not claim the adapter!"
                }
              }
            }
          },
          "403": {
            "description": "Invalid Client Token, could not authorize api access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User is not authorized to access this resource"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An Internal server error occurred.  Operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}